[{"path":"https://henningte.github.io/ir/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://henningte.github.io/ir/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"love pull requests everyone. participating project, agree abide code conduct.","code":""},{"path":"https://henningte.github.io/ir/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Contributing","text":"Make sure GitHub account. familar git GitHub, take look http://happygitwithr.com/ get started. Submit post issue, assuming one already exist. Clearly describe issue, including steps reproduce bug, justification proposed improvement. Fork repository GitHub make copy repository account. use line shell terminal: git clone git@github.com:henningte/ir.git","code":""},{"path":"https://henningte.github.io/ir/CONTRIBUTING.html","id":"making-changes","dir":"","previous_headings":"","what":"Making changes","title":"Contributing","text":"Edit files, save often, make commits logical units, commit indicates one concept Follow style guide. Make sure write good commit messages. Make sure added necessary tests code changes. Run tests using devtools::check() assure nothing else accidentally broken. need help unsure anything, post update issue.","code":""},{"path":"https://henningte.github.io/ir/CONTRIBUTING.html","id":"submitting-your-changes","dir":"","previous_headings":"","what":"Submitting your changes","title":"Contributing","text":"Push fork submit pull request. point ’re waiting us. like least comment pull requests within days (, typically, one business day). may suggest changes improvements alternatives. things can increase chance pull request accepted: Engage discussion issue. familiar backround literature cited README Write tests pass. Follow code style guide. Write good commit message.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://henningte.github.io/ir/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Henning Teickner  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. ir Copyright (C) 2020 Henning Teickner This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"purpose","dir":"Articles","previous_headings":"Introduction","what":"Purpose","title":"Introduction to the `ir`class","text":"purpose vignette describe structure methods objects class ir. ir objects used ‘ir’ package store spectra metadata. vignette helpful want understand better ‘ir’ package works, handle metadata, manipulate ir objects, want construct subclass based irclass. vignette give overview use ‘ir’ package, functions spectral preprocessing, plot ir objects. , see vignette Introduction ‘ir’ package.","code":""},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"structure","dir":"Articles","previous_headings":"Introduction","what":"Structure","title":"Introduction to the `ir`class","text":"vignette three parts: ir class Subsetting modifying ir objects Special functions manipulate ir objects part ir class, describe structure ir objects list available methods . part Subsetting modifying ir objects, show ir objects can subsetted modified (including tidyverse functions). part Special functions manipulate ir objects, present specialized functions manipulate data ir objects (including spectra).","code":""},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"preparation","dir":"Articles","previous_headings":"Introduction","what":"Preparation","title":"Introduction to the `ir`class","text":"follow vignette, install ‘ir’ package described Readme file load :","code":"library(ir)"},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"the-ir-class","dir":"Articles","previous_headings":"","what":"The ir class","title":"Introduction to the `ir`class","text":"Objects class ir principle data frames (tibbles): row represents one measurement spectrum. ir object must column spectra list data frames, element representing spectrum. Besides , ir objects may additional columns metadata. useful analyze spectra samples integrated way data, example nitrogen content (see part Subsetting modifying ir objects). spectra column list data frames, element representing spectrum. data frames row intensity values measured spectral channel (“x axis value”, e.g. wavenumber) column x storing wavenumber values column y storing respective intensity values. additional columns allowed: spectrum available sample, empty data frame placeholder: Currently, following methods available ir objects:","code":"ir_sample_data head(ir_sample_data$spectra[[1]]) #> # A tibble: 6 × 2 #>       x        y #>   <int>    <dbl> #> 1  4000 0.000361 #> 2  3999 0.000431 #> 3  3998 0.000501 #> 4  3997 0.000571 #> 5  3996 0.000667 #> 6  3995 0.000704 d <- ir_sample_data d$spectra[[1]] <- d$spectra[[1]][0, ] d$spectra[[1]]  ir_normalize(d, method = \"area\") #> # A tibble: 0 × 2 #> # … with 2 variables: x <int>, y <dbl> methods(class = \"ir\") #>  [1] [        [[       [[<-     [<-      $        $<-      cbind    filter   #>  [9] ir_as_ir max      median   min      Ops      plot     range    rbind    #> [17] rep      #> see '?methods' for accessing help and source code"},{"path":[]},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"subsetting-works-as-for-data-frames","dir":"Articles","previous_headings":"Subsetting and modifying ir objects","what":"Subsetting works as for data frames","title":"Introduction to the `ir`class","text":"Since ir objects data frames, subsetting modifying works way data frames. example, specific rows (= measurements) can filtered: advantage storing spectra list columns filtering spectral data metadata data can performed simultaneously. One exception subsetting, one must remove spectra column. removed, ir class attribute dropped: Another exception spectra column contains unsupported elements (e.g. wrong column names, additional columns, duplicated “x axis values”), object also loses ir class:","code":"ir_sample_data[5:10, ] d1 <- ir_sample_data  class(d1[, setdiff(colnames(d), \"id_sample\")]) #> [1] \"ir\"         \"tbl_df\"     \"tbl\"        \"data.frame\"  d1$spectra <- NULL class(d1) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\" d2 <- ir_sample_data d2$spectra[[1]] <- rep(d2$spectra[[1]], 2) class(d2) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\"  d3 <- ir_sample_data colnames(d3$spectra[[1]]) <- c(\"a\", \"b\") class(d3) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\""},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"tidyverse-methods-are-supported","dir":"Articles","previous_headings":"Subsetting and modifying ir objects","what":"Tidyverse methods are supported","title":"Introduction to the `ir`class","text":"Tidyverse methods manipulating ir objects also supported. example, can use mutate add new variables can use pipes (%>%) make coding reading code easier: , another example, can summarize spectra defined groups (maximum intensity value “x axis value” unique sample_type value):","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  d <- ir_sample_data  d <-    d %>%   mutate(a = rnorm(n = nrow(.)))    head(ir_sample_data) library(purrr) library(ggplot2)  d2 <-    d %>%   group_by(sample_type) %>%   summarize(     spectra = {       res <- map_dfc(spectra, function(.x) .x[, 2, drop = TRUE])       spectra[[1]] %>%         dplyr::mutate(           y =             res %>%             rowwise() %>%             mutate(y = max(c_across(everything()))) %>%             pull(y)         ) %>%         list()     },     .groups = \"drop\"   )  plot(d2) +    facet_wrap(~ sample_type)"},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"special-functions-to-manipulate-ir-objects","dir":"Articles","previous_headings":"","what":"Special functions to manipulate ir objects","title":"Introduction to the `ir`class","text":"special functions manipulate ir objects described vignette Introduction ‘ir’ package. described .","code":""},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"replicating-data","dir":"Articles","previous_headings":"Special functions to manipulate ir objects","what":"Replicating data","title":"Introduction to the `ir`class","text":"Sometimes, useful replicate one multiple measurements. can done rep() method ir objects. example, can replicate second spectrum ir_sample_data:","code":"ir_sample_data %>%   slice(2) %>%   rep(20)"},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"calculating-with-spectra","dir":"Articles","previous_headings":"Special functions to manipulate ir objects","what":"Calculating with spectra","title":"Introduction to the `ir`class","text":"ir packages supports arithmetic operations spectra, .e. addition, subtraction, multiplication, division intensity values “x axis values”. example, can subtract third spectrum ir_sample_data second:  Note metadata first argument (x) retained, second (y). manually change id_sample rbinding spectra . Note also x can contain multiple spectra, y must either contain one spectrum number spectra x case spectra matching rows subtracted (added, multiplied, divided): Note arithmetic operations also available infix operators, .e. possible compute:","code":"ir_sample_data %>%   slice(2) %>%   ir_subtract(y = ir_sample_data[3, ]) %>%   dplyr::mutate(id_sample = \"subtraction_result\") %>%   rbind(ir_sample_data[2:3, ]) %>%   plot() + facet_wrap(~ id_sample) # This will not work ir_sample_data %>%   slice(6) %>%   ir_add(y = ir_sample_data[3:4, ]) #> Error in `ir_add()`: #> ! `y` must either have only one row or as many rows as `x`.  # but this will ir_sample_data %>%   slice(2:6) %>%   ir_add(y = ir_sample_data[3, ])  #> # A tibble: 5 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                       <units>       #> 1              2 GN 11-400 needles     Cupressocyparis leylandii … 0.339405      #> 2              3 GN 11-407 needles     Juniperus chinensis Chines… 0.267552      #> 3              4 GN 11-411 needles     Metasequoia glyptostroboid… 0.350016      #> 4              5 GN 11-416 needles     Pinus strobus Torulosa      0.331100      #> 5              6 GN 11-419 needles     Pseudolarix amabili Golden… 0.279360      #> # … with 2 more variables: holocellulose <units>, spectra <list> ir_sample_data[2, ] + ir_sample_data[3, ] #> # A tibble: 1 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                       <units>       #> 1              2 GN 11-400 needles     Cupressocyparis leylandii … 0.339405      #> # … with 2 more variables: holocellulose <units>, spectra <list> ir_sample_data[2, ] - ir_sample_data[3, ] #> # A tibble: 1 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                       <units>       #> 1              2 GN 11-400 needles     Cupressocyparis leylandii … 0.339405      #> # … with 2 more variables: holocellulose <units>, spectra <list> ir_sample_data[2, ] * ir_sample_data[3, ] #> # A tibble: 1 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                       <units>       #> 1              2 GN 11-400 needles     Cupressocyparis leylandii … 0.339405      #> # … with 2 more variables: holocellulose <units>, spectra <list> ir_sample_data[2, ] / ir_sample_data[3, ] #> # A tibble: 1 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                       <units>       #> 1              2 GN 11-400 needles     Cupressocyparis leylandii … 0.339405      #> # … with 2 more variables: holocellulose <units>, spectra <list>"},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"further-information","dir":"Articles","previous_headings":"","what":"Further information","title":"Introduction to the `ir`class","text":"Many functions options handle process spectra available ‘ir’ package. described documentation. documentation, can also read details functions options presented . learn ir objects can useful can plotted, spectral preprocessing functions, see vignette Introduction ‘ir’ package.","code":""},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"sources","dir":"Articles","previous_headings":"","what":"Sources","title":"Introduction to the `ir`class","text":"data contained csv file used vignette derived Hodgkins et al. (2018)","code":""},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to the `ir`class","text":"","code":"#> R version 4.2.0 (2022-04-22) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 20.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.3.5 purrr_0.3.4   dplyr_1.0.8   ir_0.2.0      #>  #> loaded via a namespace (and not attached): #>  [1] lattice_0.20-45     tidyr_1.2.0         png_0.1-7           #>  [4] hyperSpec_0.100.0   rprojroot_2.0.3     digest_0.6.29       #>  [7] utf8_1.2.2          R6_2.5.1            evaluate_0.15       #> [10] highr_0.9           pillar_1.7.0        Rdpack_2.3          #> [13] rlang_1.0.2         lazyeval_0.2.2      SparseM_1.81        #> [16] limSolve_1.5.6      jquerylib_0.1.4     rmarkdown_2.13      #> [19] pkgdown_2.0.3       labeling_0.4.2      textshaping_0.3.6   #> [22] desc_1.4.1          stringr_1.4.0       munsell_0.5.0       #> [25] compiler_4.2.0      xfun_0.30           pkgconfig_2.0.3     #> [28] systemfonts_1.0.4   baseline_1.3-1      htmltools_0.5.2     #> [31] tidyselect_1.1.2    tibble_3.1.6        lpSolve_5.6.15      #> [34] quadprog_1.5-8      fansi_1.0.3         crayon_1.5.1        #> [37] withr_2.5.0         MASS_7.3-57         rbibutils_2.2.8     #> [40] brio_1.1.3          grid_4.2.0          jsonlite_1.8.0      #> [43] gtable_0.3.0        lifecycle_1.0.1     magrittr_2.0.3      #> [46] scales_1.2.0        cli_3.3.0           stringi_1.7.6       #> [49] cachem_1.0.6        farver_2.1.0        fs_1.5.2            #> [52] testthat_3.1.3      latticeExtra_0.6-29 xml2_1.3.3          #> [55] bslib_0.3.1         ellipsis_0.3.2      ragg_1.2.2          #> [58] generics_0.1.2      vctrs_0.4.1         RColorBrewer_1.1-3  #> [61] tools_4.2.0         glue_1.6.2          jpeg_0.1-9          #> [64] fastmap_1.1.0       yaml_2.3.5          colorspace_2.0-3    #> [67] memoise_2.0.1       knitr_1.38          sass_0.4.1"},{"path":"https://henningte.github.io/ir/articles/ir-class.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to the `ir`class","text":"Hodgkins, Suzanne B., Curtis J. Richardson, René Dommain, Hongjun Wang, Paul H. Glaser, Brittany Verbeke, B. Rose Winkler, et al. 2018. “Tropical peatland carbon storage linked global latitudinal trends peat recalcitrance.” Nature communications 9 (1): 3640. https://doi.org/10.1038/s41467-018-06050-2.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"purpose","dir":"Articles","previous_headings":"Introduction","what":"Purpose","title":"Introduction to the 'ir' package","text":"vignette shows main functionalities ‘ir’ package. includes data import, functions spectral preprocessing, plotting. vignette explain data structure ir objects (objects package ir uses store spectra) detail describe general data manipulation functions (e.g. subsetting rows columns, modifying variables) (, see vignette Introduction irclass). Moreover, vignette explain purpose spectral preprocessing functions.","code":""},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"structure","dir":"Articles","previous_headings":"Introduction","what":"Structure","title":"Introduction to the 'ir' package","text":"vignette three parts: Data import export Plotting spectra Spectral preprocessing part Data import export, show spetra can imported csv files Thermo Galactic’s spectral files (file extension .spc). also show ir objects can exported csv files. end, use sample data comes along ‘ir’ package. part Plotting spectra, show spectra can plotted plots can modified. part Spectral preprocessing demonstrate main preprocessing functions included ‘ir’ package can combined execute complex preprocessing pipelines.","code":""},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"preparation","dir":"Articles","previous_headings":"Introduction","what":"Preparation","title":"Introduction to the 'ir' package","text":"follow vignette, install ‘ir’ package described Readme file load :","code":"library(ir)"},{"path":[]},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"data-import","dir":"Articles","previous_headings":"Data import and export","what":"Data import","title":"Introduction to the 'ir' package","text":"test importing spectra files, ’ll use sample data contained ‘ir’ package (folder inst/extdata). First, ’ll show import spectra csv files import Thermo Galactic’s spectral files (file extension .spc).","code":""},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"csv-files","dir":"Articles","previous_headings":"Data import and export > Data import","what":"csv files","title":"Introduction to the 'ir' package","text":"Spectra csv files can imported ir_import_csv(). function can import spectra one csv files format shown : subset data import moments. first column must contain spectral channel values (“x axis values”, e.g. wavenumbers mid infrared spectra), additional column represents intensity values (“y axis values”, e.g. absorbances) one spectrum. example , four spectra csv file. , can simply pass path file ir_import_csv() import spectra: argument sample_id = \"from_colnames\" tells ir_import_csv() extract names spectra column names csv file. additional metadata available, can bind ir object second step (note: , use functions [dplyr] reformat metadata; don’t need understand details data cleanup): Now, d_csv addition columns added metadata.","code":"d_csv <- ir_import_csv(\"../inst/extdata/klh_hodgkins_mir.csv\", sample_id = \"from_colnames\") library(dplyr) #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:kableExtra': #>  #>     group_rows #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(stringr)  # import the metadata d_csv_metadata <-    read.csv(\"./../inst/extdata/klh_hodgkins_reference.csv\",            header = TRUE,            as.is = TRUE) %>%   dplyr::rename(     sample_id = \"Sample.Name\",     sample_type = \"Category\",     comment = \"Description\",     holocellulose = \"X..Cellulose...Hemicellulose..measured.\",     klason_lignin = \"X..Klason.lignin..measured.\"    ) %>%   # make the sample_id values fir to those in `d_csv$sample_id` to make combining easier   dplyr::mutate(     sample_id =       sample_id %>%       stringr::str_replace_all(pattern = \"( |-)\", replacement = \"\\\\.\")   )  d_csv <-    d_csv %>%   dplyr::full_join(d_csv_metadata, by = \"sample_id\")"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"thermo-galactics-spc-files","dir":"Articles","previous_headings":"Data import and export > Data import","what":"Thermo Galactic’s spc files","title":"Introduction to the 'ir' package","text":"Spectra spc files can imported ir_import_spc(). function can import spectra one spc files: case, names spectra metadata extracted spc file(s) added ir object. can inspect d_spc see additional variables.","code":"d_spc <- ir_import_spc(\"../inst/extdata/1.spc\") #> Warning in length(pos) == 1 && pos[[1]] == -1: 'length(x) = 11 > 1' in coercion #> to 'logical(1)'"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"data-export","dir":"Articles","previous_headings":"Data import and export","what":"Data export","title":"Introduction to the 'ir' package","text":"Data ir objects can principle exported many ways. , show hot export csv file format sample data imported subsection csv files. end, first “flatten” spectra column ir_sample_data (using ir_flatten()) export csv file using write.csv(). Second, export metadata, drop spectra ir_sample_data (using ir_drop_spectra()), write remaining data separate csv file using write.csv():","code":"# export only the spectra ir_sample_data %>%   ir_flatten() %>%   write.csv(tempfile(\"ir_sample_data_spectra\", fileext = \"csv\"), row.names = FALSE)  # export only the metadata ir_sample_data %>%   ir_drop_spectra() %>%   write.csv(tempfile(\"ir_sample_data_metadata\", fileext = \"csv\"), row.names = FALSE)"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"plotting-spectra","dir":"Articles","previous_headings":"","what":"Plotting spectra","title":"Introduction to the 'ir' package","text":"‘ir’ package provides function create simple plots spectra --box:  plot intensity values (“y axis values”, e.g. absorbances) spectrum versus spectral channel values (“x axis values”, e.g. wavenumbers), connected line. spectra ir object plotted top . ir relies ggplot. makes possible modify plot functions ggplot2. example, color spectra according sample class:  course, can change axis labels, layout, etc:","code":"plot(d_csv) library(ggplot2)  plot(d_csv) +    geom_path(aes(color = sample_type)) plot(d_csv) +    geom_path(aes(color = sample_type)) +   labs(x = expression(\"Wavenumber [\"*cm^{-1}*\"]\"), y = \"Absorbance\") +   guides(color = guide_legend(title = \"Sample type\")) +   theme(legend.position = \"bottom\")"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"spectral-preprocessing","dir":"Articles","previous_headings":"","what":"Spectral preprocessing","title":"Introduction to the 'ir' package","text":"ir provides many functions spectral preprocessing. , ’ll show use subset . make easier compare effect, ’ll show sample spectrum looks preprocessing:","code":"plot(d_spc)"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"baseline-correction","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Baseline correction","title":"Introduction to the 'ir' package","text":"Baseline correction rubberband algorithm (see spc.rubberband function hyperspec package):","code":"d_spc %>%   ir_bc(method = \"rubberband\") %>%   plot()"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"normalization","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Normalization","title":"Introduction to the 'ir' package","text":"Normalization intensity values dividing intensity value sum intensity values (note different scale y axis comparison spectrum preprocessing):  Normalization intensity values dividing intensity value intensity value specific wavenumber (horizontal vertical lines highlight intensity selected wavenumber 1 normalization):  warning just says spectrum’s wavenumber values exactly match desired value therefore nearest value available selected. disable warning, can interpolate spectrum appropriately (see , section Interpolating).","code":"d_spc %>%   ir_normalize(method = \"area\") %>%   plot() d_spc %>%   ir_normalize(method = 1090) %>%   plot() +   geom_hline(yintercept = 1, linetype = 2) +   geom_vline(xintercept = 1090, linetype = 2) #> Warning: 1089.59485352039 selected instead of 1090."},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"smoothing","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Smoothing","title":"Introduction to the 'ir' package","text":"Smoothing spectra Savitzky-Golay algorithm (see sgolayfilt() function signal package details):","code":"d_spc %>%   ir_smooth(method = \"sg\", p = 3, n = 91, m = 0) %>%   plot()"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"derivative-spectra","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Derivative spectra","title":"Introduction to the 'ir' package","text":"Savitzky-Golay smoothing can also used compute derivative spectra (first derivative computed setting argument m 1. See ?ir_smooth information):","code":"d_spc %>%   ir_smooth(method = \"sg\", p = 3, n = 9, m = 1) %>%   plot()"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"clipping","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Clipping","title":"Introduction to the 'ir' package","text":"Spectra can clipped desired ranges spectral channels (“x axis values”, e.g. wavenumbers). , clip spectrum range [1000, 3000]:","code":"d_spc %>%   ir_clip(range = data.frame(start = 1000, end = 3000)) %>%   plot() #> Warning: 1000.88447606564 selected instead of 1000. #> • 3000.7249417305 selected instead of 3000."},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"interpolating","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Interpolating","title":"Introduction to the 'ir' package","text":"Spectral interpolation (interpolating intensity values new wavenumber values) can performed. , intensity values interpolated integer wavenumbers increasing 1 (setting dw = 1) within range data:  easy see plot, warning shown (section Normalization) normalization now appear:","code":"d_spc %>%   ir_interpolate(dw = 1) %>%   plot() d_spc %>%   ir_interpolate(dw = 1) %>%   ir_normalize(method = 1090) %>%   plot() +   geom_hline(yintercept = 1, linetype = 2) +   geom_vline(xintercept = 1090, linetype = 2)"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"interpolating-regions","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Interpolating regions","title":"Introduction to the 'ir' package","text":"Sometimes, useful replace parts spectra straight lines connect start end points specified range. can done ir_interpolate_region():","code":"d_spc %>%   ir_interpolate_region(range = data.frame(start = 1000, end = 3000)) %>%   plot() #> Warning: 1000.88447606564 selected instead of 1000. #> • 3000.7249417305 selected instead of 3000."},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"binning","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Binning","title":"Introduction to the 'ir' package","text":"Spectral binning collects intensity values contiguous spectral ranges (“bins”) specified widths averages :","code":"d_spc %>%   ir_bin(width = 30) %>%   plot()"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"building-preprocessing-pipelines","dir":"Articles","previous_headings":"Spectral preprocessing","what":"Building preprocessing pipelines","title":"Introduction to the 'ir' package","text":"ir, easy build complex reprocessing workflows “piping” (using magrittr’s pipe (%>%) operator) together different preprocessing steps:  Now, baseline corrected spectrum, \"area\" normalized, clipped [650, 3900], binned bin widths 10 cm\\(^{-1}\\).","code":"d_spc %>%   ir_interpolate(dw = 1) %>%   ir_clip(range = data.frame(start = 700, end = 3900)) %>%   ir_bc(method = \"rubberband\") %>%   ir_normalise(method = \"area\") %>%   ir_bin(width = 10) %>%   plot()"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"further-information","dir":"Articles","previous_headings":"","what":"Further information","title":"Introduction to the 'ir' package","text":"Many functions options handle process spectra available ‘ir’ package. described documentation. documentation, can also read details functions options presented . learn structure general functions handle ir objects, see vignette Introduction irclass.","code":""},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"sources","dir":"Articles","previous_headings":"","what":"Sources","title":"Introduction to the 'ir' package","text":"data contained csv file used vignette derived Hodgkins et al. (2018)","code":""},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Introduction to the 'ir' package","text":"","code":"#> R version 4.2.0 (2022-04-22) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 20.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0 #> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.3.5    stringr_1.4.0    dplyr_1.0.8      ir_0.2.0         #> [5] kableExtra_1.3.4 #>  #> loaded via a namespace (and not attached): #>  [1] Rcpp_1.0.8.3        svglite_2.1.0       lattice_0.20-45     #>  [4] tidyr_1.2.0         png_0.1-7           hyperSpec_0.100.0   #>  [7] rprojroot_2.0.3     digest_0.6.29       utf8_1.2.2          #> [10] R6_2.5.1            signal_0.7-7        evaluate_0.15       #> [13] highr_0.9           httr_1.4.2          pillar_1.7.0        #> [16] Rdpack_2.3          rlang_1.0.2         lazyeval_0.2.2      #> [19] rstudioapi_0.13     SparseM_1.81        limSolve_1.5.6      #> [22] jquerylib_0.1.4     rmarkdown_2.13      pkgdown_2.0.3       #> [25] labeling_0.4.2      textshaping_0.3.6   desc_1.4.1          #> [28] webshot_0.5.3       munsell_0.5.0       compiler_4.2.0      #> [31] xfun_0.30           pkgconfig_2.0.3     systemfonts_1.0.4   #> [34] baseline_1.3-1      htmltools_0.5.2     tidyselect_1.1.2    #> [37] tibble_3.1.6        lpSolve_5.6.15      quadprog_1.5-8      #> [40] fansi_1.0.3         viridisLite_0.4.0   withr_2.5.0         #> [43] crayon_1.5.1        MASS_7.3-57         rbibutils_2.2.8     #> [46] brio_1.1.3          grid_4.2.0          jsonlite_1.8.0      #> [49] gtable_0.3.0        lifecycle_1.0.1     magrittr_2.0.3      #> [52] units_0.8-0         scales_1.2.0        cli_3.3.0           #> [55] stringi_1.7.6       cachem_1.0.6        farver_2.1.0        #> [58] fs_1.5.2            testthat_3.1.3      latticeExtra_0.6-29 #> [61] xml2_1.3.3          bslib_0.3.1         ellipsis_0.3.2      #> [64] ragg_1.2.2          vctrs_0.4.1         generics_0.1.2      #> [67] RColorBrewer_1.1-3  tools_4.2.0         glue_1.6.2          #> [70] purrr_0.3.4         jpeg_0.1-9          fastmap_1.1.0       #> [73] yaml_2.3.5          colorspace_2.0-3    rvest_1.0.2         #> [76] memoise_2.0.1       knitr_1.38          sass_0.4.1"},{"path":"https://henningte.github.io/ir/articles/ir-introduction.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to the 'ir' package","text":"Hodgkins, Suzanne B., Curtis J. Richardson, René Dommain, Hongjun Wang, Paul H. Glaser, Brittany Verbeke, B. Rose Winkler, et al. 2018. “Tropical peatland carbon storage linked global latitudinal trends peat recalcitrance.” Nature communications 9 (1): 3640. https://doi.org/10.1038/s41467-018-06050-2.","code":""},{"path":"https://henningte.github.io/ir/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Henning Teickner. Author, maintainer, copyright holder.","code":""},{"path":"https://henningte.github.io/ir/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Teickner H (2022). ir: Functions Handle Preprocess Infrared Spectra. R package version 0.2.0, https://henningte.github.io/ir/.","code":"@Manual{,   title = {ir: Functions to Handle and Preprocess Infrared Spectra},   author = {Henning Teickner},   year = {2022},   note = {R package version 0.2.0},   url = {https://henningte.github.io/ir/}, }"},{"path":[]},{"path":"https://henningte.github.io/ir/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Functions to Handle and Preprocess Infrared Spectra","text":"‘ir’ R package contains simple functions import, handle preprocess infrared spectra. Infrared spectra stored list columns data frames enable efficient storage metadata along spectra support analyses containing data samples. Supported file formats import : .csv files individual spectra. Thermo Galactic’s .spc files individual spectra. Provided functions preprocessing general handling : polynomial baseline convex hull baseline Savitzky-Golay baseline (Lasch 2012). binning. clipping. interpolating (resampling, linearly). replacing selected parts spectrum straight line. averaging spectra within specified groups. maximum intensity intensity specific x value intensity values sum 1. Savitzky-Golay smoothing Fourier smoothing. computing derivatives spectra using Savitzky-Golay smoothing. mathematical transformations (addition, subtraction, multiplication, division). computing variance intensity values (optionally subtracting reference spectra). computing maxima, minima, median, ranges intensity values spectra. plotting. tidyverse methods.","code":""},{"path":"https://henningte.github.io/ir/index.html","id":"how-to-install","dir":"","previous_headings":"Overview","what":"How to install","title":"Functions to Handle and Preprocess Infrared Spectra","text":"can install ‘ir’ CRAN using R via: can install ‘ir’ GitHub using R via:","code":"install.packages(\"ir\") remotes::install_github(repo = \"henningte/ir\")"},{"path":"https://henningte.github.io/ir/index.html","id":"how-to-use","dir":"","previous_headings":"Overview","what":"How to use","title":"Functions to Handle and Preprocess Infrared Spectra","text":"can load ‘ir’ R : brief introductions, see two vignettes: Introduction ‘ir’ package Introduction irclass","code":"# load ir package library(ir)  # load additional packages needed for this tutorial library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.0.5"},{"path":"https://henningte.github.io/ir/index.html","id":"sample-workflow","dir":"","previous_headings":"Overview > How to use","what":"Sample workflow","title":"Functions to Handle and Preprocess Infrared Spectra","text":"simple workflow , example, baseline correct spectra, bin bins width 10 wavenumber units, normalize maximum intensity value 1 minimum intensity value 0 plot baseline corrected spectra sample sample type. ’s ‘ir’ code using built-sample data ir_sample_data.","code":"ir_sample_data %>%                                      # data   ir::ir_bc(method = \"rubberband\") %>%                  # baseline correction   ir::ir_bin(width = 10) %>%                            # binning   ir::ir_normalize(method = \"zeroone\") %>%              # normalization   plot() + ggplot2::facet_wrap(~ sample_type)           # plot"},{"path":"https://henningte.github.io/ir/index.html","id":"data-structure","dir":"","previous_headings":"Overview > How to use","what":"Data structure","title":"Functions to Handle and Preprocess Infrared Spectra","text":"can load sample data : ir_sample_data object class ir. Object class ir basically data frame row represents one infrared measurement column spectra contains infrared spectra (one per row). allows effectively storing repeated measurements sample table, well metadata accessory data (e.g. nitrogen content sample). column spectra list column data frames, meaning cell sample_data contains column spectra data frame. example, first element ir_sample_data$spectra represents first spectrum data frame: Column x represents x values (case wavenumbers [cm-1]) column y corresponding intensity values.","code":"ir::ir_sample_data #> # A tibble: 58 x 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>             <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii~ 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine~ 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi~ 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde~ 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali~ 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad~ 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter~ 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin~ 0.289050      #> # ... with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <named list> # View the first ten rows of the first spectrum in ir_sample_data ir::ir_get_spectrum(ir_sample_data, what = 1)[[1]] %>%    head(10) #> # A tibble: 10 x 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000361 #>  2  3999 0.000431 #>  3  3998 0.000501 #>  4  3997 0.000571 #>  5  3996 0.000667 #>  6  3995 0.000704 #>  7  3994 0.000612 #>  8  3993 0.000525 #>  9  3992 0.000502 #> 10  3991 0.000565"},{"path":"https://henningte.github.io/ir/index.html","id":"how-to-cite","dir":"","previous_headings":"Overview","what":"How to cite","title":"Functions to Handle and Preprocess Infrared Spectra","text":"Please cite R package : Henning Teickner (2022). ir: Functions Handle Preprocess Infrared Spectra. DOI: 10.5281/zenodo.5747170. Accessed 25 Apr 2022. Online https://zenodo.org/record/5747170.","code":""},{"path":"https://henningte.github.io/ir/index.html","id":"companion-packages","dir":"","previous_headings":"Overview","what":"Companion packages","title":"Functions to Handle and Preprocess Infrared Spectra","text":"irpeat builds ‘ir’. irpeat provides functions analyze infrared spectra peat (humification indices, prediction models).","code":""},{"path":"https://henningte.github.io/ir/index.html","id":"licenses","dir":"","previous_headings":"Overview","what":"Licenses","title":"Functions to Handle and Preprocess Infrared Spectra","text":"Text figures : CC 4.0 Code : See DESCRIPTION file Data : CC 4.0 attribution requested reuse. See sources section data sources give credit original author(s) source.","code":""},{"path":"https://henningte.github.io/ir/index.html","id":"contributions","dir":"","previous_headings":"Overview","what":"Contributions","title":"Functions to Handle and Preprocess Infrared Spectra","text":"welcome contributions everyone. get started, please see contributor guidelines. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://henningte.github.io/ir/index.html","id":"sources","dir":"","previous_headings":"Overview","what":"Sources","title":"Functions to Handle and Preprocess Infrared Spectra","text":"complete data package derived Hodgkins et al. (2018) restructured match requirements ‘ir’. original article containing data can downloaded https://www.nature.com/articles/s41467-018-06050-2 distributed Creative Commons Attribution 4.0 International License (https://creativecommons.org/licenses//4.0/). data Klason lignin holocellulose content originally derived De La Cruz, Florentino B., Osborne, Barlaz (2016). packages developed R (R version 4.0.1 (2020-06-06)) (R Core Team 2019) using functions devtools (Wickham, Hester, Chang 2019), usethis (Wickham Bryan 2019), rrtools (Marwick 2019) roxygen2 (Wickham et al. 2019).","code":""},{"path":"https://henningte.github.io/ir/index.html","id":"references","dir":"","previous_headings":"Overview","what":"References","title":"Functions to Handle and Preprocess Infrared Spectra","text":"De La Cruz, Florentino B., Jason Osborne, Morton . Barlaz. 2016. “Determination Sources Organic Matter Solid Waste Analysis Phenolic Copper Oxide Oxidation Products Lignin.” Journal Environmental Engineering 142 (2): 04015076. https://doi.org/10.1061/(ASCE)EE.1943-7870.0001038. Hodgkins, Suzanne B., Curtis J. Richardson, René Dommain, Hongjun Wang, Paul H. Glaser, Brittany Verbeke, B. Rose Winkler, et al. 2018. “Tropical peatland carbon storage linked global latitudinal trends peat recalcitrance.” Nature Communications 9 (1): 3640. https://doi.org/10.1038/s41467-018-06050-2. Lasch, Peter. 2012. “Spectral Pre-Processing Biomedical Vibrational Spectroscopy Microspectroscopic Imaging.” Chemometrics Intelligent Laboratory Systems 117 (August): 100–114. https://doi.org/10.1016/j.chemolab.2012.03.011. Marwick, Ben. 2019. “rrtools: Creates Reproducible Research Compendium.” https://github.com/benmarwick/rrtools. R Core Team. 2019. “R: Language Environment Statistical Computing.” Vienna, Austria: R Foundation Statistical Computing. https://www.R-project.org/. Wickham, Hadley, Jennifer Bryan. 2019. “usethis: Automate Package Project Setup.” https://CRAN.R-project.org/package=usethis. Wickham, Hadley, Peter Danenberg, Gábor Csárdi, Manuel Eugster. 2019. “roxygen2: -Line Documentation R.” https://CRAN.R-project.org/package=roxygen2. Wickham, Hadley, Jim Hester, Winston Chang. 2019. “devtools: Tools Make Developing R Packages Easier.” https://CRAN.R-project.org/package=devtools.","code":""},{"path":"https://henningte.github.io/ir/reference/Ops.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic operations for ir objects — Ops.ir","title":"Arithmetic operations for ir objects — Ops.ir","text":"Arithmetic operations ir objects","code":""},{"path":"https://henningte.github.io/ir/reference/Ops.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic operations for ir objects — Ops.ir","text":"","code":"# S3 method for ir Ops(e1, e2)"},{"path":"https://henningte.github.io/ir/reference/Ops.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic operations for ir objects — Ops.ir","text":"e1 object class ir. e2 object class ir numeric value.","code":""},{"path":"https://henningte.github.io/ir/reference/Ops.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arithmetic operations for ir objects — Ops.ir","text":"e1 intensity values spectra added /subtracted /multiplied /divided e2: e2 numeric value, intensity values spectra e1 added/subtracted/multiplied/divided e2. e2 ir object one row, replicated (see rep.ir) row numbers match e1 intensity values added/subtracted/multiplied/divided row-wise. e2 ir object number rows e1, intensity values added/subtracted/multiplied/divided row-wise.","code":""},{"path":"https://henningte.github.io/ir/reference/Ops.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arithmetic operations for ir objects — Ops.ir","text":"","code":"## addition ir::ir_sample_data + ir::ir_sample_data #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <list> ir::ir_sample_data + 2 #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <list>  ## subtraction ir::ir_sample_data - ir::ir_sample_data #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <list> ir::ir_sample_data - 2 #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <list>  ## multiplication ir::ir_sample_data * ir::ir_sample_data #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <list> ir::ir_sample_data * 2 #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <list>  ## division ir::ir_sample_data / ir::ir_sample_data #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <list> ir::ir_sample_data / 2 #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <list>"},{"path":"https://henningte.github.io/ir/reference/arrange.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange rows in ir objects by column values — arrange.ir","title":"Arrange rows in ir objects by column values — arrange.ir","text":"Arrange rows ir objects column values","code":""},{"path":"https://henningte.github.io/ir/reference/arrange.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange rows in ir objects by column values — arrange.ir","text":"","code":"arrange.ir(.data, ..., .by_group = FALSE)"},{"path":"https://henningte.github.io/ir/reference/arrange.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Arrange rows in ir objects by column values — arrange.ir","text":"dplyr::arrange()","code":""},{"path":"https://henningte.github.io/ir/reference/arrange.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange rows in ir objects by column values — arrange.ir","text":".data object class ir. ... <data-masking> Variables, functions variables. Use desc() sort variable descending order. .by_group TRUE, sort first grouping variable. Applies grouped data frames .","code":""},{"path":"https://henningte.github.io/ir/reference/arrange.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange rows in ir objects by column values — arrange.ir","text":".data arranged rows.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/arrange.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange rows in ir objects by column values — arrange.ir","text":"","code":"## arrange dplyr::arrange(ir_sample_data, dplyr::desc(sample_type)) #> # A tibble: 58 × 7 #>    id_measurement id_sample  sample_type   sample_comment          klason_lignin #>  *          <int> <chr>      <chr>         <chr>                   <units>       #>  1             37 SW 11-138  softwood      Tsuga heterophyla West… 0.347116      #>  2             38 SW 11-139  softwood      Pinus monticola Wester… 0.274905      #>  3             39 SW 11-154  softwood      Pinus strobus Eastern … 0.311760      #>  4             40 SW 11-158  softwood      Pinus taeda Loblolly p… 0.274715      #>  5             41 SW 11-178  softwood      Tsuga caroliniana Caro… 0.345870      #>  6             49 ONP 08-78  old newsprint Australia Paper         0.240786      #>  7             50 ONP 09-388 old newsprint Eleazer 1997 sample     0.238994      #>  8             51 ONP 11-450 old newsprint News and Observer date… 0.163485      #>  9             52 ONP 11-451 old newsprint Houston Chronicle date… 0.240492      #> 10             53 ONP 11-458 old newsprint Indianapolis star       0.288420      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/bind.html","id":null,"dir":"Reference","previous_headings":"","what":"Bind rows of ir objects — bind","title":"Bind rows of ir objects — bind","text":"Bind rows ir objects","code":""},{"path":"https://henningte.github.io/ir/reference/bind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind rows of ir objects — bind","text":"","code":"# S3 method for ir rbind(..., deparse.level = 1)  # S3 method for ir cbind(..., deparse.level = 1)"},{"path":"https://henningte.github.io/ir/reference/bind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind rows of ir objects — bind","text":"... Objects bind together. cbind, first objects allowed class ir. deparse.level integer value; see rbind().","code":""},{"path":"https://henningte.github.io/ir/reference/bind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind rows of ir objects — bind","text":"object class ir. rbind returns input ir objects combined row-wise. cbind returns input irobject objects combined column-wise.","code":""},{"path":"https://henningte.github.io/ir/reference/bind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind rows of ir objects — bind","text":"","code":"# rbind rbind(ir_sample_data, ir_sample_data) #> # A tibble: 116 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 106 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <named list> rbind(ir_sample_data %>% dplyr::select(spectra),       ir_sample_data %>% dplyr::select(spectra)) #> # A tibble: 116 × 1 #>    spectra              #>  * <named list>         #>  1 <tibble [3,351 × 2]> #>  2 <tibble [3,351 × 2]> #>  3 <tibble [3,351 × 2]> #>  4 <tibble [3,351 × 2]> #>  5 <tibble [3,351 × 2]> #>  6 <tibble [3,351 × 2]> #>  7 <tibble [3,351 × 2]> #>  8 <tibble [3,351 × 2]> #>  9 <tibble [3,351 × 2]> #> 10 <tibble [3,351 × 2]> #> # … with 106 more rows  # cbind cbind(ir_sample_data, a = seq_len(nrow(ir_sample_data))) #> # A tibble: 58 × 8 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 3 more variables: holocellulose <units>, #> #   a <integer>, spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/distinct.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset distinct/unique rows in ir objects — distinct.ir","title":"Subset distinct/unique rows in ir objects — distinct.ir","text":"Subset distinct/unique rows ir objects","code":""},{"path":"https://henningte.github.io/ir/reference/distinct.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset distinct/unique rows in ir objects — distinct.ir","text":"","code":"distinct.ir(.data, ..., .keep_all = FALSE)"},{"path":"https://henningte.github.io/ir/reference/distinct.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Subset distinct/unique rows in ir objects — distinct.ir","text":"dplyr::distinct()","code":""},{"path":"https://henningte.github.io/ir/reference/distinct.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset distinct/unique rows in ir objects — distinct.ir","text":".data object class ir. ... <data-masking> Optional variables use determining uniqueness. multiple rows given combination inputs, first row preserved. omitted, use variables. .keep_all TRUE, keep variables .data. combination ... distinct, keeps first row values.","code":""},{"path":"https://henningte.github.io/ir/reference/distinct.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset distinct/unique rows in ir objects — distinct.ir","text":".data distinct rows.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/distinct.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset distinct/unique rows in ir objects — distinct.ir","text":"","code":"## distinct dplyr::distinct(rep(ir_sample_data, 2)) #> # A tibble: 116 × 8 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 106 more rows, and 3 more variables: holocellulose <units>, #> #   spectra <named list>, measurement_id <int>"},{"path":"https://henningte.github.io/ir/reference/extract.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a character column in an ir object into multiple columns using regular expression groups — extract.ir","title":"Extract a character column in an ir object into multiple columns using regular expression groups — extract.ir","text":"Extract character column ir object multiple columns using regular expression groups","code":""},{"path":"https://henningte.github.io/ir/reference/extract.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a character column in an ir object into multiple columns using regular expression groups — extract.ir","text":"","code":"extract.ir(   data,   col,   into,   regex = \"([[:alnum:]]+)\",   remove = TRUE,   convert = FALSE,   ... )"},{"path":"https://henningte.github.io/ir/reference/extract.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Extract a character column in an ir object into multiple columns using regular expression groups — extract.ir","text":"tidyr::extract()","code":""},{"path":"https://henningte.github.io/ir/reference/extract.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a character column in an ir object into multiple columns using regular expression groups — extract.ir","text":"data object class ir. col Column name position. passed tidyselect::vars_pull(). argument passed expression supports quasiquotation (can unquote column names column positions). Names new variables create character vector. Use NA omit variable output. regex string representing regular expression used extract desired values. one group (defined ()) element . remove TRUE, remove input column output data frame. convert TRUE, run type.convert() .= TRUE new columns. useful component columns integer, numeric logical. NB: cause string \"NA\"s converted NAs. ... Additional arguments passed methods.","code":""},{"path":"https://henningte.github.io/ir/reference/extract.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a character column in an ir object into multiple columns using regular expression groups — extract.ir","text":"data extracted character column. See tidyr::extract().","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/extract.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a character column in an ir object into multiple columns using regular expression groups — extract.ir","text":"","code":"## extract ir_sample_data %>%   tidyr::extract(     id_sample,  \"a\"   ) #> # A tibble: 58 × 7 #>    id_measurement a     sample_type sample_comment   klason_lignin holocellulose #>             <int> <chr> <chr>       <chr>            <units>       <units>       #>  1              1 GN    needles     Abies Firma Mom… 0.359944      0.3084        #>  2              2 GN    needles     Cupressocyparis… 0.339405      0.2497        #>  3              3 GN    needles     Juniperus chine… 0.267552      0.3362        #>  4              4 GN    needles     Metasequoia gly… 0.350016      0.1844        #>  5              5 GN    needles     Pinus strobus T… 0.331100      0.3092        #>  6              6 GN    needles     Pseudolarix ama… 0.279360      0.3355        #>  7              7 GN    needles     Sequoia semperv… 0.329672      0.2408        #>  8              8 GN    needles     Taxodium distic… 0.356950      0.1253        #>  9              9 GN    needles     Thuja occidenta… 0.369360      0.2517        #> 10             10 GN    needles     Tsuga carolinia… 0.289050      0.3487        #> # … with 48 more rows, and 1 more variable: spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/filter-joins.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering joins for an ir object — filter-joins","title":"Filtering joins for an ir object — filter-joins","text":"Filtering joins ir object","code":""},{"path":"https://henningte.github.io/ir/reference/filter-joins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering joins for an ir object — filter-joins","text":"","code":"semi_join.ir(x, y, by = NULL, copy = FALSE, ..., na_matches = c(\"na\", \"never\"))  anti_join.ir(x, y, by = NULL, copy = FALSE, ..., na_matches = c(\"na\", \"never\"))"},{"path":"https://henningte.github.io/ir/reference/filter-joins.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Filtering joins for an ir object — filter-joins","text":"filter-joins","code":""},{"path":"https://henningte.github.io/ir/reference/filter-joins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering joins for an ir object — filter-joins","text":"x object class ir. y data frame. character vector variables join . NULL, default, *_join() perform natural join, using variables common across x y. message lists variables can check correct; suppress message supplying explicitly. join different variables x y, use named vector. example, = c(\"\" = \"b\") match x$y$b. join multiple variables, use vector length > 1. example, = c(\"\", \"b\") match x$y$x$b y$b. Use named vector match different variables x y. example, = c(\"\" = \"b\", \"c\" = \"d\") match x$y$b x$c y$d. perform cross-join, generating combinations x y, use = character(). copy x y data source, copy TRUE, y copied src x.  allows join tables across srcs, potentially expensive operation must opt . ... parameters passed onto methods. na_matches NA NaN values match one another? default, \"na\", treats two NA NaN values equal, like %%, match(), merge(). Use \"never\" always treat two NA NaN values different, like joins database sources, similarly merge(incomparables = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/filter-joins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering joins for an ir object — filter-joins","text":"x y joined. spectra column renamed, irclass dropped. See filter-joins.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/filter-joins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtering joins for an ir object — filter-joins","text":"","code":"## semi_join set.seed(234) dplyr::semi_join(   ir_sample_data,   tibble::tibble(     id_measurement = c(1:5, 101:105),     nitrogen_content = rbeta(n = 10, 0.2, 0.1)   ),   by = \"id_measurement\" ) #> # A tibble: 5 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                       <units>       #> 1              1 GN 11-389 needles     Abies Firma Momi fir        0.359944      #> 2              2 GN 11-400 needles     Cupressocyparis leylandii … 0.339405      #> 3              3 GN 11-407 needles     Juniperus chinensis Chines… 0.267552      #> 4              4 GN 11-411 needles     Metasequoia glyptostroboid… 0.350016      #> 5              5 GN 11-416 needles     Pinus strobus Torulosa      0.331100      #> # … with 2 more variables: holocellulose <units>, spectra <named list>   ## anti_join set.seed(234) dplyr::anti_join(   ir_sample_data,   tibble::tibble(     id_measurement = c(1:5, 101:105),     nitrogen_content = rbeta(n = 10, 0.2, 0.1)   ),   by = \"id_measurement\" ) #> # A tibble: 53 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  2              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  3              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  4              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #>  5             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #>  6             11 GN 11-435 needles     Picea abies Norway Spruce  0.288000      #>  7             12 GN 11-460 needles     Pinus taeda Loblolly pine  0.322300      #>  8             13 HW 07-151 hardwood    Quercus sp. Red oak (from… 0.238095      #>  9             14 HW 11-137 hardwood    Acer saccharum Sugar maple 0.242592      #> 10             15 HW 11-144 hardwood    Fraxinus americana White … 0.259224      #> # … with 43 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/filter.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows in ir objects using column values — filter.ir","title":"Subset rows in ir objects using column values — filter.ir","text":"Subset rows ir objects using column values","code":""},{"path":"https://henningte.github.io/ir/reference/filter.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows in ir objects using column values — filter.ir","text":"","code":"filter.ir(.data, ..., .preserve = FALSE)"},{"path":"https://henningte.github.io/ir/reference/filter.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Subset rows in ir objects using column values — filter.ir","text":"dplyr::filter()","code":""},{"path":"https://henningte.github.io/ir/reference/filter.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows in ir objects using column values — filter.ir","text":".data object class ir. ... <data-masking> Expressions return logical value, defined terms variables .data. multiple expressions included, combined & operator. rows conditions evaluate TRUE kept. .preserve Relevant .data input grouped. .preserve = FALSE (default), grouping structure recalculated based resulting data, otherwise grouping kept .","code":""},{"path":"https://henningte.github.io/ir/reference/filter.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows in ir objects using column values — filter.ir","text":".data filtered rows.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/filter.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows in ir objects using column values — filter.ir","text":"","code":"## filter dplyr::filter(ir_sample_data, sample_type == \"office paper\") #> # A tibble: 4 × 7 #>   id_measurement id_sample  sample_type  sample_comment klason_lignin #> *          <int> <chr>      <chr>        <chr>          <units>       #> 1             55 OFF 10-506 office paper \"\"             0.203574      #> 2             56 OFF 13-144 office paper \"\"             0.318451      #> 3             57 OFF 08-80  office paper \"\"             0.562450      #> 4             58 OFF 08-852 office paper \"\"             0.054230      #> # … with 2 more variables: holocellulose <units>, spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/group_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Group rows in ir objects by one or more variables — group_by","title":"Group rows in ir objects by one or more variables — group_by","text":"Group rows ir objects one variables","code":""},{"path":"https://henningte.github.io/ir/reference/group_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group rows in ir objects by one or more variables — group_by","text":"","code":"group_by.ir(   .data,   ...,   .add = FALSE,   .drop = dplyr::group_by_drop_default(.data) )  ungroup.ir(.data, ...)"},{"path":"https://henningte.github.io/ir/reference/group_by.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Group rows in ir objects by one or more variables — group_by","text":"dplyr::group_by()","code":""},{"path":"https://henningte.github.io/ir/reference/group_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group rows in ir objects by one or more variables — group_by","text":".data object class ir. ... group_by(), variables computations group . Computations always done ungrouped data frame. perform computations grouped data, need use separate mutate() step group_by(). Computations allowed nest_by(). ungroup(), variables remove grouping. .add FALSE, default, group_by() override existing groups. add existing groups, use .add = TRUE. argument previously called add, prevented creating new grouping variable called add, conflicts naming conventions. .drop Drop groups formed factor levels appear data? default TRUE except .data previously grouped .drop = FALSE. See group_by_drop_default() details.","code":""},{"path":"https://henningte.github.io/ir/reference/group_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group rows in ir objects by one or more variables — group_by","text":".data grouped rows (group_by.ir()) ungrouped rows (ungroup.ir()).","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/group_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group rows in ir objects by one or more variables — group_by","text":"","code":"## group_by dplyr::group_by(ir_sample_data, sample_type) #> # A tibble: 58 × 7 #> # Groups:   sample_type [8] #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <named list>   ## ungroup dplyr::ungroup(dplyr::group_by(ir_sample_data, sample_type)) #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/ir-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ir: Functions to Handle and Preprocess Infrared Spectra — ir-package","title":"ir: Functions to Handle and Preprocess Infrared Spectra — ir-package","text":"Functions import handle infrared spectra (import '.csv' Thermo Galactic's '.spc', baseline correction, binning, clipping, interpolating, smoothing, averaging, adding, subtracting, dividing, multiplying, plotting).","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/ir-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ir: Functions to Handle and Preprocess Infrared Spectra — ir-package","text":"Maintainer: Henning Teickner henning.teickner@uni-muenster.de (ORCID) [copyright holder]","code":""},{"path":"https://henningte.github.io/ir/reference/ir_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add infrared spectra — ir_add","title":"Add infrared spectra — ir_add","text":"ir_add takes two objects class ir, x y, adds intensity values spectra matching rows y x.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add infrared spectra — ir_add","text":"","code":"ir_add(x, y)"},{"path":"https://henningte.github.io/ir/reference/ir_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add infrared spectra — ir_add","text":"x object class ir. y object class ir numeic value. y object class ir, must number rows x x axis values (e.g. wavenumber values) matching spectrum x.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add infrared spectra — ir_add","text":"x spectrum respective intensity values y added.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add infrared spectra — ir_add","text":"","code":"x1 <-   ir::ir_add(ir::ir_sample_data, ir::ir_sample_data) x1 <-   ir::ir_add(ir::ir_sample_data, ir::ir_sample_data[1, ])"},{"path":"https://henningte.github.io/ir/reference/ir_as_ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic to convert objects to class ir — ir_as_ir","title":"Generic to convert objects to class ir — ir_as_ir","text":"ir_as_ir ir generic convert object object class ir.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_as_ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic to convert objects to class ir — ir_as_ir","text":"","code":"ir_as_ir(x, ...)  # S3 method for ir ir_as_ir(x, ...)  # S3 method for data.frame ir_as_ir(x, ...)"},{"path":"https://henningte.github.io/ir/reference/ir_as_ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic to convert objects to class ir — ir_as_ir","text":"x object. ... arguments passed individual methods. x data frame object class ir, ignored.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_as_ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic to convert objects to class ir — ir_as_ir","text":"object class ir.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_as_ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic to convert objects to class ir — ir_as_ir","text":"","code":"# conversion from an ir object ir::ir_sample_data %>%   ir_as_ir() #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>             <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <named list>  # conversion from a data frame x_ir <- ir::ir_sample_data  x_df <-   x_ir %>%   ir_drop_spectra() %>%   dplyr::mutate(     spectra = x_ir$spectra   ) %>%   ir_as_ir()  # check that ir_as_ir preserves the input class ir_sample_data %>%   structure(class = setdiff(class(.), \"ir\")) %>%   dplyr::group_by(sample_type) %>%   ir_as_ir() #> # A tibble: 58 × 7 #> # Groups:   sample_type [8] #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 2 more variables: holocellulose <units>, #> #   spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/ir_average.html","id":null,"dir":"Reference","previous_headings":"","what":"Averages infrared spectra within groups — ir_average","title":"Averages infrared spectra within groups — ir_average","text":"ir_average averages infrared spectra within user-defined group. NA values omitted default.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Averages infrared spectra within groups — ir_average","text":"","code":"ir_average(x, ..., na.rm = TRUE)"},{"path":"https://henningte.github.io/ir/reference/ir_average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Averages infrared spectra within groups — ir_average","text":"x object class ir. ... Variables x use groups. na.rm logical value indicating NA values dropped (TRUE) (FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_average.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Averages infrared spectra within groups — ir_average","text":"object class ir spectra averaged within groups defined ....","code":""},{"path":"https://henningte.github.io/ir/reference/ir_average.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Averages infrared spectra within groups — ir_average","text":"","code":"# average the sample data spectra across sample types x <-   ir::ir_sample_data %>%   ir::ir_average(sample_type)"},{"path":"https://henningte.github.io/ir/reference/ir_bc.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs baseline correction on infrared spectra — ir_bc","title":"Performs baseline correction on infrared spectra — ir_bc","text":"ir_bc performs baseline correction infrared spectra. Baseline correction either performed using polynomial user defined degree fitted spectrum (see ChemoSpec::baselineSpectra()), using rubberband function fitted spectrum (see hyperSpec::spc.rubberband()), using Savitzky-Golay smoothed version input spectra (see ir_bc_sg()).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs baseline correction on infrared spectra — ir_bc","text":"","code":"ir_bc(x, method = \"rubberband\", ..., return_bl = FALSE)"},{"path":"https://henningte.github.io/ir/reference/ir_bc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs baseline correction on infrared spectra — ir_bc","text":"x object class ir. method character value indicating method used baseline correction. method = \"polynomial\", polynomial used baseline correction. method = \"rubberband\", rubberband function used baseline correction. method = \"sg\", Savitzky-Golay smoothed version input spectra used baseline correction. ... arguments passed ir_bc_polynomial() ir_bc_sg(). return_bl logical value indicating spectrum baseline returned instead corrected intensity values (return_bl = TRUE) (return_bl = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs baseline correction on infrared spectra — ir_bc","text":"object class ir baseline corrected spectra, return_bl = TRUE, baselines instead spectra column spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs baseline correction on infrared spectra — ir_bc","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # rubberband baseline correction x1 <-    ir::ir_sample_data %>%    dplyr::slice(1:10) %>%    ir::ir_bc(method = \"rubberband\")  # polynomial baseline correction x2 <-    ir::ir_sample_data %>%    dplyr::slice(1:10) %>%    ir::ir_bc(method = \"polynomial\", degree = 2) #> Warning: Unknown or uninitialised column: `measurement_id`. #> Warning: Calling 'structure(NULL, *)' is deprecated, as NULL cannot have attributes. #>   Consider 'structure(list(), *)' instead.  # Savitzky-Golay baseline correction x3 <-    ir::ir_sample_data %>%    dplyr::slice(1:10) %>%    ir::ir_bc(method = \"sg\", p = 3, n = 199, ts = 1, m = 0)  # return the baseline instead of the baseline corrected spectra x1_bl <-    ir::ir_sample_data %>%    dplyr::slice(1:10) %>%    ir::ir_bc(method = \"rubberband\", return_bl = TRUE)"},{"path":"https://henningte.github.io/ir/reference/ir_bc_polynomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs baseline correction on infrared spectra using a polynomial — ir_bc_polynomial","title":"Performs baseline correction on infrared spectra using a polynomial — ir_bc_polynomial","text":"ir_bc_polynomial performs baseline correction infrared spectra using polynomial. ir_bc_polynomial extended wrapper function ChemoSpec::baselineSpectra().","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc_polynomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs baseline correction on infrared spectra using a polynomial — ir_bc_polynomial","text":"","code":"ir_bc_polynomial(x, degree = 2, return_bl = FALSE)"},{"path":"https://henningte.github.io/ir/reference/ir_bc_polynomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs baseline correction on infrared spectra using a polynomial — ir_bc_polynomial","text":"x object class ir. degree integer value representing degree polynomial used baseline correction. return_bl logical value indicating spectrum baseline returned instead corrected intensity values (return_bl = TRUE) (return_bl = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc_polynomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs baseline correction on infrared spectra using a polynomial — ir_bc_polynomial","text":"object class ir baseline corrected spectra returnbl = FALSE baselines returnbl = TRUE.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/ir_bc_polynomial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs baseline correction on infrared spectra using a polynomial — ir_bc_polynomial","text":"","code":"x2 <-    ir::ir_sample_data %>%    ir::ir_bc_polynomial(degree = 2, return_bl = FALSE) #> Warning: Unknown or uninitialised column: `measurement_id`. #> Warning: Calling 'structure(NULL, *)' is deprecated, as NULL cannot have attributes. #>   Consider 'structure(list(), *)' instead."},{"path":"https://henningte.github.io/ir/reference/ir_bc_rubberband.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs baseline correction on infrared spectra using a rubberband algorithm — ir_bc_rubberband","title":"Performs baseline correction on infrared spectra using a rubberband algorithm — ir_bc_rubberband","text":"ir_bc_rubberband performs baseline correction infrared spectra using rubberband algorithm. ir_bc_rubberband extended wrapper function hyperSpec::spc.rubberband().","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc_rubberband.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs baseline correction on infrared spectra using a rubberband algorithm — ir_bc_rubberband","text":"","code":"ir_bc_rubberband(x, return_bl = FALSE)"},{"path":"https://henningte.github.io/ir/reference/ir_bc_rubberband.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs baseline correction on infrared spectra using a rubberband algorithm — ir_bc_rubberband","text":"x object class ir. return_bl logical value indicating spectrum baseline returned instead corrected intensity values (return_bl = TRUE) (return_bl = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc_rubberband.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs baseline correction on infrared spectra using a rubberband algorithm — ir_bc_rubberband","text":"object class ir baseline corrected spectra , returnbl = TRUE,  baselines.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/ir_bc_rubberband.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs baseline correction on infrared spectra using a rubberband algorithm — ir_bc_rubberband","text":"","code":"x1 <-    ir::ir_sample_data %>%    ir::ir_bc_rubberband(return_bl = FALSE)"},{"path":"https://henningte.github.io/ir/reference/ir_bc_sg.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs baseline correction on infrared spectra using a Savitzky-Golay baseline — ir_bc_sg","title":"Performs baseline correction on infrared spectra using a Savitzky-Golay baseline — ir_bc_sg","text":"ir_bc_sg computes smoothed version spectra using ir_smooth() method = \"sg\" uses baseline subtracted spectra perform baseline correction (Lasch 2012) .","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc_sg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs baseline correction on infrared spectra using a Savitzky-Golay baseline — ir_bc_sg","text":"","code":"ir_bc_sg(x, ..., return_bl = FALSE)"},{"path":"https://henningte.github.io/ir/reference/ir_bc_sg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs baseline correction on infrared spectra using a Savitzky-Golay baseline — ir_bc_sg","text":"x object class ir. ... Arguments passed ir_smooth() (except method always set \"sg\"). return_bl logical value indicating spectrum baseline returned instead corrected intensity values (return_bl = TRUE) (return_bl = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc_sg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs baseline correction on infrared spectra using a Savitzky-Golay baseline — ir_bc_sg","text":"object class ir baseline corrected spectra , returnbl = TRUE,  baselines.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc_sg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Performs baseline correction on infrared spectra using a Savitzky-Golay baseline — ir_bc_sg","text":"Lasch P (2012). “Spectral Pre-Processing Biomedical Vibrational Spectroscopy Microspectroscopic Imaging.” Chemometrics Intelligent Laboratory Systems, 117, 100--114. ISSN 01697439, doi:10.1016/j.chemolab.2012.03.011 .","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bc_sg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs baseline correction on infrared spectra using a Savitzky-Golay baseline — ir_bc_sg","text":"","code":"x <-    ir::ir_sample_data %>%    ir::ir_bc_sg(p = 3, n = 199, ts = 1, m = 0, return_bl = FALSE)"},{"path":"https://henningte.github.io/ir/reference/ir_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Bins infrared spectra — ir_bin","title":"Bins infrared spectra — ir_bin","text":"ir_bin bins intensity values infrared spectra bins defined width defined number bins.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bins infrared spectra — ir_bin","text":"","code":"ir_bin(x, width = 10)"},{"path":"https://henningte.github.io/ir/reference/ir_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bins infrared spectra — ir_bin","text":"x object class ir integer wavenumber values increasing 1. width integer value indicating wavenumber width resulting bin. Must set NULL n specified.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bins infrared spectra — ir_bin","text":"object class ir spectra binned.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bins infrared spectra — ir_bin","text":"last bin contains fewer input values remaining bins, dropped warning printed. wavenumber value exactly matches boundary bin window, respective intensity value assigned neighboring bins.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_bin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bins infrared spectra — ir_bin","text":"","code":"x <-    ir::ir_sample_data %>%    ir_bin(width = 50)"},{"path":"https://henningte.github.io/ir/reference/ir_clip.html","id":null,"dir":"Reference","previous_headings":"","what":"Clips infrared spectra to new wavenumber ranges — ir_clip","title":"Clips infrared spectra to new wavenumber ranges — ir_clip","text":"ir_clip clips infrared spectra new, specified, wavenumber range multiple new specified wavenumber ranges.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_clip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clips infrared spectra to new wavenumber ranges — ir_clip","text":"","code":"ir_clip(x, range)"},{"path":"https://henningte.github.io/ir/reference/ir_clip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clips infrared spectra to new wavenumber ranges — ir_clip","text":"x object class ir. range data.frame two columns row wavenumber range keep. columns : start numeric vector start values wavenumber ranges. end numeric vector end values wavenumber ranges. range one row, multiple ranges clipped x merged together. Overlapping ranges allowed.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_clip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clips infrared spectra to new wavenumber ranges — ir_clip","text":"object class ir spectra clipped.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_clip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clips infrared spectra to new wavenumber ranges — ir_clip","text":"","code":"## clipping with one range  # define clipping range range <-   data.frame(start = 900, end = 1000)  # clip x <-    ir::ir_sample_data %>%    ir::ir_clip(range = range)  ## clipping with mutliple ranges  range <-   data.frame(start = c(900, 1900), end = c(1000, 2200))  # clip x <-    ir::ir_sample_data %>%    ir::ir_clip(range = range)"},{"path":"https://henningte.github.io/ir/reference/ir_divide.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide infrared spectra or divide infrared spectra by a numeric value — ir_divide","title":"Divide infrared spectra or divide infrared spectra by a numeric value — ir_divide","text":"ir_divide takes two objects class ir, x y, divides intensity values, takes one object class ir, x, one numeric value, y, divides intensity values x y.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_divide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide infrared spectra or divide infrared spectra by a numeric value — ir_divide","text":"","code":"ir_divide(x, y)"},{"path":"https://henningte.github.io/ir/reference/ir_divide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divide infrared spectra or divide infrared spectra by a numeric value — ir_divide","text":"x object class ir. y object class ir numeic value. y object class ir, must number rows x x axis values (e.g. wavenumber values) matching spectrum x.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_divide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divide infrared spectra or divide infrared spectra by a numeric value — ir_divide","text":"x spectrum intensity values divided respective intensity values y (y object class ir), intensity values divided y y numeric value.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_divide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Divide infrared spectra or divide infrared spectra by a numeric value — ir_divide","text":"","code":"# division with y as ir object x1 <-   ir::ir_divide(ir::ir_sample_data, ir::ir_sample_data) x1 <-   ir::ir_divide(ir::ir_sample_data, ir::ir_sample_data[1, ])  # division with y being a numeric value x2 <-   ir::ir_divide(ir::ir_sample_data, y = 20)"},{"path":"https://henningte.github.io/ir/reference/ir_drop_spectra.html","id":null,"dir":"Reference","previous_headings":"","what":"Drops the column spectra from an object is of class ir — ir_drop_spectra","title":"Drops the column spectra from an object is of class ir — ir_drop_spectra","text":"ir_drop_spectra removes column spectra object class ir removes \"ir\" class attribute.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_drop_spectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drops the column spectra from an object is of class ir — ir_drop_spectra","text":"","code":"ir_drop_spectra(x)"},{"path":"https://henningte.github.io/ir/reference/ir_drop_spectra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drops the column spectra from an object is of class ir — ir_drop_spectra","text":"x object class ir.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_drop_spectra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drops the column spectra from an object is of class ir — ir_drop_spectra","text":"x without column spectra without \"ir\" class attribute.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_drop_spectra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drops the column spectra from an object is of class ir — ir_drop_spectra","text":"","code":"ir::ir_sample_data %>%   ir_drop_spectra() #> # A tibble: 58 × 6 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                      <units>       #>  1              1 GN 11-389 needles     Abies Firma Momi fir       0.359944      #>  2              2 GN 11-400 needles     Cupressocyparis leylandii… 0.339405      #>  3              3 GN 11-407 needles     Juniperus chinensis Chine… 0.267552      #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi… 0.350016      #>  5              5 GN 11-416 needles     Pinus strobus Torulosa     0.331100      #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde… 0.279360      #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali… 0.329672      #>  8              8 GN 11-423 needles     Taxodium distichum Cascad… 0.356950      #>  9              9 GN 11-428 needles     Thuja occidentalis Easter… 0.369360      #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin… 0.289050      #> # … with 48 more rows, and 1 more variable: holocellulose <units>"},{"path":"https://henningte.github.io/ir/reference/ir_flat_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Cleans objects of class ir_flat — ir_flat_clean","title":"Cleans objects of class ir_flat — ir_flat_clean","text":"ir_flatten_clean takes object class ir_flat either returns non-empty spectra empty spectra object class ir_flat.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_flat_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cleans objects of class ir_flat — ir_flat_clean","text":"","code":"ir_flat_clean(x, return_empty = FALSE)"},{"path":"https://henningte.github.io/ir/reference/ir_flat_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cleans objects of class ir_flat — ir_flat_clean","text":"x object class ir_flat. return_empty logical value indicating empty spectra returned (return_empty = TRUE) non-empty spectra (return_empty = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_flat_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cleans objects of class ir_flat — ir_flat_clean","text":"x empty spectra dropped (return_empty = TRUE) empty spectra returned (return_empty = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts objects of class ir to objects of class ir_flat — ir_flatten","title":"Converts objects of class ir to objects of class ir_flat — ir_flatten","text":"ir_flatten takes object class ir, extracts spectra column combines spectra object class ir_flat. Metadata retained flattening.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts objects of class ir to objects of class ir_flat — ir_flatten","text":"","code":"ir_flatten(x, measurement_id = as.character(seq_len(nrow(x))))"},{"path":"https://henningte.github.io/ir/reference/ir_flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts objects of class ir to objects of class ir_flat — ir_flatten","text":"x object class ir. measurement_id character vector element row x contains names use column names spectra ir_flat object create.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_flatten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts objects of class ir to objects of class ir_flat — ir_flatten","text":"object class ir_flat.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_flatten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts objects of class ir to objects of class ir_flat — ir_flatten","text":"","code":"x_flat <-    ir::ir_sample_data %>%    ir::ir_flatten()"},{"path":"https://henningte.github.io/ir/reference/ir_get_intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts intensities from spectra in an ir object for specific spectral channels — ir_get_intensity","title":"Extracts intensities from spectra in an ir object for specific spectral channels — ir_get_intensity","text":"ir_get_intensity extracts intensity values spectra specific user-defined spectral channels (\"x axis values\", e.g. wavenumber values).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts intensities from spectra in an ir object for specific spectral channels — ir_get_intensity","text":"","code":"ir_get_intensity(x, wavenumber, warn = TRUE)"},{"path":"https://henningte.github.io/ir/reference/ir_get_intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts intensities from spectra in an ir object for specific spectral channels — ir_get_intensity","text":"x object class ir. wavenumber numeric vector spectral channels (\"x axis values\", e.g. wavenumber values) extract intensities. warn logical value indicating warnings displayed (TRUE) (FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_intensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts intensities from spectra in an ir object for specific spectral channels — ir_get_intensity","text":"x additional column intensity. x$intensity list column element representing data.frame row element wavenumber two columns: x \"x axis values\" extracted ir_get_wavenumberindex() applied wavenumber corresponding spectrum x. y extracted intensity values","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_intensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts intensities from spectra in an ir object for specific spectral channels — ir_get_intensity","text":"","code":"x <-    ir::ir_sample_data %>%    ir::ir_get_intensity(wavenumber = 1090)"},{"path":"https://henningte.github.io/ir/reference/ir_get_spectrum.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts selected spectra from an object of class ir — ir_get_spectrum","title":"Extracts selected spectra from an object of class ir — ir_get_spectrum","text":"ir_get_spectrum extracts selected spectra object class ir.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_spectrum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts selected spectra from an object of class ir — ir_get_spectrum","text":"","code":"ir_get_spectrum(x, what)"},{"path":"https://henningte.github.io/ir/reference/ir_get_spectrum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts selected spectra from an object of class ir — ir_get_spectrum","text":"x object class ir. numeric vector element representing row x extract spectrum.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_spectrum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts selected spectra from an object of class ir — ir_get_spectrum","text":"integer vector length wavenumber row indices x corresponding wavenumber values wavenumber.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_spectrum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts selected spectra from an object of class ir — ir_get_spectrum","text":"","code":"x <-    ir::ir_sample_data %>%    ir::ir_get_spectrum(what = c(5, 9))"},{"path":"https://henningte.github.io/ir/reference/ir_get_wavenumberindex.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the index of a defined wavenumber value for a spectrum — ir_get_wavenumberindex","title":"Gets the index of a defined wavenumber value for a spectrum — ir_get_wavenumberindex","text":"ir_get_wavenumberindex gets defined wavenumber value set wavenumber values corresponding indices (row number) object class ir flattened ir_flatten(). specified wavenumber values match exactly wavenumber values ir object, indices next wavenumber values returned, along warning.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_wavenumberindex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the index of a defined wavenumber value for a spectrum — ir_get_wavenumberindex","text":"","code":"ir_get_wavenumberindex(x, wavenumber, warn = TRUE)"},{"path":"https://henningte.github.io/ir/reference/ir_get_wavenumberindex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the index of a defined wavenumber value for a spectrum — ir_get_wavenumberindex","text":"x data.frame column x representing x units spectrum several spectra (e.g. form object class ir_flat). wavenumber numeric vector wavenumber values get indices. warn logical value indicating warnings displayed (TRUE) (FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_wavenumberindex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets the index of a defined wavenumber value for a spectrum — ir_get_wavenumberindex","text":"integer vector length wavenumber row indices x corresponding wavenumber values wavenumber.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_get_wavenumberindex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the index of a defined wavenumber value for a spectrum — ir_get_wavenumberindex","text":"","code":"x_index_1090 <-    ir::ir_sample_data %>%    ir::ir_flatten() %>%    ir::ir_get_wavenumberindex(wavenumber = 1090)"},{"path":"https://henningte.github.io/ir/reference/ir_import_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports infrared spectra from various files — ir_import_csv","title":"Imports infrared spectra from various files — ir_import_csv","text":"ir_import_csv imports raw infrared spectra one .csv file contains least one spectrum, x axis values (e.g. wavenumbers) first column intensity values spectra remaining columns. Note function perform checks validity content read .csv file.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_import_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports infrared spectra from various files — ir_import_csv","text":"","code":"ir_import_csv(filenames, sample_id = \"from_filenames\", ...)"},{"path":"https://henningte.github.io/ir/reference/ir_import_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports infrared spectra from various files — ir_import_csv","text":"filenames character vector representing complete paths .csv files import. sample_id Either: NULL: Nothing additional happens. character vector length filenames: vector added column sample_id ir object. \"from_filenames\": file name(s) used values new column sample_id add (default). \"from_colnames\": header csv file used values new column sample_id add. ... arguments passed read.csv().","code":""},{"path":"https://henningte.github.io/ir/reference/ir_import_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports infrared spectra from various files — ir_import_csv","text":"object class ir containing infrared spectra extracted .csv file(s).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_import_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports infrared spectra from various files — ir_import_csv","text":"","code":"# import data from csv files d <- ir::ir_import_csv(   system.file(package = \"ir\", \"extdata/klh_hodgkins_mir.csv\"),   sample_id = \"from_colnames\")"},{"path":"https://henningte.github.io/ir/reference/ir_import_spc.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports infrared spectra from Thermo Galactic's files — ir_import_spc","title":"Imports infrared spectra from Thermo Galactic's files — ir_import_spc","text":"ir_import_spc imports raw infrared spectra Thermo Galactic's .spc file several files. ir_import_spc wrapper function hyperSpec::read.spc().","code":""},{"path":"https://henningte.github.io/ir/reference/ir_import_spc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports infrared spectra from Thermo Galactic's files — ir_import_spc","text":"","code":"ir_import_spc(filenames)"},{"path":"https://henningte.github.io/ir/reference/ir_import_spc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports infrared spectra from Thermo Galactic's files — ir_import_spc","text":"filenames character vector representing complete paths .spc files import.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_import_spc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports infrared spectra from Thermo Galactic's files — ir_import_spc","text":"object class ir containing infrared spectra extracted .spc file(s) metadata extracted hyperSpec::read.spc(). Metadata variables : scan_number integer value representing number scans. detection_gain_factor detection gain factor. scan_speed scan speed [kHz]. laser_wavenumber wavenumber laser. detector_name name detector. source_name name infrared radiation source. purge_delay duration purge delay measurement [s]. zero_filling_factor numeric value representing zero filling factor. apodisation_function name apodisation function. exponentiation factor exponentiation factor used file compression. data_point_number number data points spectrum x_variable_type type x variable. y_variable_type type y variable. measurement_date POSIXct representing measurement date time. measurement_device name measurement device.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_import_spc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports infrared spectra from Thermo Galactic's files — ir_import_spc","text":"","code":"# import a sample .spc file x <- ir::ir_import_spc(system.file(\"extdata/1.spc\", package = \"ir\")) #> Warning: 'length(x) = 11 > 1' in coercion to 'logical(1)'"},{"path":"https://henningte.github.io/ir/reference/ir_interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolates intensity values of infrared spectra in an ir object for new wavenumber values — ir_interpolate","title":"Interpolates intensity values of infrared spectra in an ir object for new wavenumber values — ir_interpolate","text":"ir_interpolate interpolates intensity values infrared spectra new wavenumber values.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolates intensity values of infrared spectra in an ir object for new wavenumber values — ir_interpolate","text":"","code":"ir_interpolate(x, start = NULL, dw = 1)"},{"path":"https://henningte.github.io/ir/reference/ir_interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolates intensity values of infrared spectra in an ir object for new wavenumber values — ir_interpolate","text":"x object class ir. start numerical value indicating start wavenumber value relative new wavenumber values interpolated. value allowed < floor(firstvalue) - 2, whereby firstvalue first wavenumber value within x. start = NULL, floor(firstvalue) used first wavenumber value. dw numerical value representing desired wavenumber value difference adjacent values.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_interpolate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolates intensity values of infrared spectra in an ir object for new wavenumber values — ir_interpolate","text":"object class ir containing interpolated spectra. NA values resulting interpolation automatically dropped.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolates intensity values of infrared spectra in an ir object for new wavenumber values — ir_interpolate","text":"","code":"x <-    ir::ir_sample_data %>%    ir::ir_interpolate(start = NULL, dw = 1)"},{"path":"https://henningte.github.io/ir/reference/ir_interpolate_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolates selected regions in infrared spectra in an ir object — ir_interpolate_region","title":"Interpolates selected regions in infrared spectra in an ir object — ir_interpolate_region","text":"ir_interpolate_region linearly interpolates user-defined region infrared spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_interpolate_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolates selected regions in infrared spectra in an ir object — ir_interpolate_region","text":"","code":"ir_interpolate_region(x, range)"},{"path":"https://henningte.github.io/ir/reference/ir_interpolate_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolates selected regions in infrared spectra in an ir object — ir_interpolate_region","text":"x object class ir. range data.frame row region interpolate linearly two columns: start numeric vector start values regions interpolate linearly (x axis values). end numeric vector end values regions interpolate linearly (x axis values). row range, values range$start smaller values range$end.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_interpolate_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolates selected regions in infrared spectra in an ir object — ir_interpolate_region","text":"x defined wavenumber region(s) interpolated linearly.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_interpolate_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolates selected regions in infrared spectra in an ir object — ir_interpolate_region","text":"","code":"# interpolation range range <- data.frame(start = 1000, end = 1500)  # do the interpolation x <-    ir::ir_sample_data %>%    ir::ir_interpolate_region(range = range)"},{"path":"https://henningte.github.io/ir/reference/ir_multiply.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply infrared spectra or multiply infrared spectra with a numeric value — ir_multiply","title":"Multiply infrared spectra or multiply infrared spectra with a numeric value — ir_multiply","text":"ir_multiply takes two objects class ir, x y, multiplies intensity values, takes one object class ir, x, one numeric value, y, multiplies intensity values x y.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_multiply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply infrared spectra or multiply infrared spectra with a numeric value — ir_multiply","text":"","code":"ir_multiply(x, y)"},{"path":"https://henningte.github.io/ir/reference/ir_multiply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply infrared spectra or multiply infrared spectra with a numeric value — ir_multiply","text":"x object class ir. y object class ir numeic value. y object class ir, must number rows x x axis values (e.g. wavenumber values) matching spectrum x.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_multiply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply infrared spectra or multiply infrared spectra with a numeric value — ir_multiply","text":"x spectrum intensity values multiplied respective intensity values y (y object class ir), intensity values multiplied yif y numeric value.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_multiply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiply infrared spectra or multiply infrared spectra with a numeric value — ir_multiply","text":"","code":"# multiplication with y as ir object x1 <-   ir::ir_multiply(ir::ir_sample_data, ir::ir_sample_data) x1 <-   ir::ir_multiply(ir::ir_sample_data, ir::ir_sample_data[1, ])  # multiplication with y being a numeric value x2 <-   ir::ir_multiply(ir::ir_sample_data, y = -1)"},{"path":"https://henningte.github.io/ir/reference/ir_new_ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an object of class ir — ir_new_ir","title":"Creates an object of class ir — ir_new_ir","text":"ir_new_ir constructor function objects class ir. object class ir tibble::tbl_df() sample row list column containing spectra sample.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_new_ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an object of class ir — ir_new_ir","text":"","code":"ir_new_ir(spectra, metadata = tibble::tibble())"},{"path":"https://henningte.github.io/ir/reference/ir_new_ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an object of class ir — ir_new_ir","text":"spectra named list element contains spectral data one measurement. list element must data.frame two columns row wavenumber value spectra data. first column must contain unique wavenumber values second column intensity values measured spectrum sample. metadata optional data.frame additional columns containing metadata spectra spectra. Optionally, empty data.frame can defined metadata available.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_new_ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an object of class ir — ir_new_ir","text":"object class ir following columns: spectra list column identical spectra. ... Additional columns contained metadata.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_new_ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an object of class ir — ir_new_ir","text":"","code":"ir_new_ir(   spectra = ir_sample_data$spectra,   metadata = ir_sample_data %>% dplyr::select(-spectra) ) #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde…         0.279 #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali…         0.330 #>  8              8 GN 11-423 needles     Taxodium distichum Cascad…         0.357 #>  9              9 GN 11-428 needles     Thuja occidentalis Easter…         0.369 #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin…         0.289 #> # … with 48 more rows, and 2 more variables: holocellulose [1], #> #   spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/ir_new_ir_flat.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an object of class ir_flat — ir_new_ir_flat","title":"Creates an object of class ir_flat — ir_new_ir_flat","text":"ir_new_ir_flat constructor function objects class ir_flat. object class ir_flat data.frame first column (\"x\") contains unique x values spectra (e.g. wavenumbers) remaining columns represent intensity values spectra corresponding x values.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_new_ir_flat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an object of class ir_flat — ir_new_ir_flat","text":"","code":"ir_new_ir_flat(x)"},{"path":"https://henningte.github.io/ir/reference/ir_new_ir_flat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an object of class ir_flat — ir_new_ir_flat","text":"x data.frame numeric columns first column name \"x\".","code":""},{"path":"https://henningte.github.io/ir/reference/ir_new_ir_flat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an object of class ir_flat — ir_new_ir_flat","text":"object class ir_flat.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_new_ir_flat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates an object of class ir_flat — ir_new_ir_flat","text":"","code":"x_flat <-    ir::ir_sample_data %>%    ir::ir_flatten()"},{"path":"https://henningte.github.io/ir/reference/ir_normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalizes infrared spectra in an ir object — ir_normalize","title":"Normalizes infrared spectra in an ir object — ir_normalize","text":"ir_normalize normalizes intensity values infrared spectra. Spectra can normalized three ways (value argument method): \"zeroone\" Normalization intensity values range [0;1]. Note different spectra, different wavenumber values intensity may 1 normalization, depending location peak maximum height. \"area\" Normalization intensity values spectrum sum 1. Note case negative intensities values, count negative values summation. numeric value Normalization intensity specified wavenumber value value 1 minimum intensity value 0.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalizes infrared spectra in an ir object — ir_normalize","text":"","code":"ir_normalize(x, method = \"area\")  ir_normalise(x, method = \"area\")"},{"path":"https://henningte.github.io/ir/reference/ir_normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalizes infrared spectra in an ir object — ir_normalize","text":"x object class ir. method character value specifying normalization method apply. method = \"zeroone\", intensity values normalized [0;1]. method = \"area\", intensity values divided sum intensity values wavenumber values spectrum. method convertible numeric value, e.g. method = \"980\", intensity spectra wavenumber value 980 set 1 minimum intensity value spectrum set 0, .e. spectra normalized referring specific wavenumber value.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalizes infrared spectra in an ir object — ir_normalize","text":"object class ir representing normalized version x.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_normalize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalizes infrared spectra in an ir object — ir_normalize","text":"","code":"# with method = \"area\" x <-    ir::ir_sample_data %>%    ir::ir_normalize(method = \"area\")  # normalizing to a specific peak x <-    ir::ir_sample_data %>%    ir::ir_normalize(method = 1090)"},{"path":"https://henningte.github.io/ir/reference/ir_remove_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes empty data values in an object of class ir — ir_remove_missing","title":"Removes empty data values in an object of class ir — ir_remove_missing","text":"ir_remove_missing takes object class ir removes rows data.frames list column spectra NA intensity values (column y). Additionally, one can specify remove rows ir object discard contain empty spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_remove_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes empty data values in an object of class ir — ir_remove_missing","text":"","code":"ir_remove_missing(x, remove_rows = FALSE)"},{"path":"https://henningte.github.io/ir/reference/ir_remove_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes empty data values in an object of class ir — ir_remove_missing","text":"x object class ir. remove_rows logical value indicating rows x empty spectra discarded (remove_rows = TRUE) (remove_rows = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_remove_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes empty data values in an object of class ir — ir_remove_missing","text":"x cleaned spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_remove_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes empty data values in an object of class ir — ir_remove_missing","text":"","code":"# create sample data with some missing rows and one entire missing spectra x <-    ir::ir_sample_data x$spectra[[1]] <- x$spectra[[1]][0, ] x$spectra[[2]][1:100, \"y\"] <- NA_real_  # remove missing values (but remove no rows in x) x1 <-    x %>%    ir::ir_remove_missing(remove_rows = FALSE)  # remove missing values (and remove rows in x if a compete spectrum is # missing) x2 <-    x %>%    ir::ir_remove_missing(remove_rows = TRUE)  nrow(x) #> [1] 58 nrow(x1) #> [1] 58 nrow(x2) #> [1] 57"},{"path":"https://henningte.github.io/ir/reference/ir_sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample object of class ir — ir_sample_data","title":"Sample object of class ir — ir_sample_data","text":"sample object class ir. data set contains ATR-MIR spectra set organic reference materials along metadata (types samples description) accessory data (Klason lignin mass fraction holocellulose mass fraction).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample object of class ir — ir_sample_data","text":"","code":"ir_sample_data"},{"path":"https://henningte.github.io/ir/reference/ir_sample_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample object of class ir — ir_sample_data","text":"data frame 58 rows 7 variables: id_measurement integer vector unique id spectrum. id_sample character vector unique id sample. sample_type character vector containing class labels types reference materials. sample_comment character vector containing comments sample. klason_lignin numeric vector mass fractions Klason lignin sample. holocellulose numeric vector mass fractions holocellulose sample. spectra See ir_new_ir().","code":""},{"path":"https://henningte.github.io/ir/reference/ir_sample_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample object of class ir — ir_sample_data","text":"data set derived https://www.nature.com/articles/s41467-018-06050-2 published Hodgkins et al. (2018)  CC 4.0 license https://creativecommons.org/licenses//4.0/. Hodgkins et al. (2018)  originally derived data Klason Lignin Holocellulose content De La Cruz, Florentino B. et al. (2016) .","code":""},{"path":"https://henningte.github.io/ir/reference/ir_sample_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample object of class ir — ir_sample_data","text":"De La Cruz, Florentino B., Osborne J, Barlaz MA (2016). “Determination Sources Organic Matter Solid Waste Analysis Phenolic Copper Oxide Oxidation Products Lignin.” Journal Environmental Engineering, 142(2), 04015076. ISSN 0733-9372, doi:10.1061/(ASCE)EE.1943-7870.0001038 . Hodgkins SB, Richardson CJ, Dommain R, Wang H, Glaser PH, Verbeke B, Winkler BR, Cobb AR, Rich VI, Missilmani M, Flanagan N, Ho M, Hoyt , Harvey CF, Vining SR, Hough MA, Moore TR, Richard PJH, De La Cruz, Florentino B., Toufaily J, Hamdan R, Cooper WT, Chanton JP (2018). “Tropical peatland carbon storage linked global latitudinal trends peat recalcitrance.” Nature communications, 9(1), 3640. doi:10.1038/s41467-018-06050-2 .","code":""},{"path":"https://henningte.github.io/ir/reference/ir_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooths infrared spectra in an ir object — ir_smooth","title":"Smooths infrared spectra in an ir object — ir_smooth","text":"ir_smooth applies smoothing functions infrared spectra. ir_smooth either performs Savitzky-Golay smoothing, using signal::sgolayfilt(), Fourier smoothing using fda::smooth.basis(). Savitzky-Golay smoothing can also used compute derivatives spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooths infrared spectra in an ir object — ir_smooth","text":"","code":"ir_smooth(   x,   method = \"sg\",   p = 3,   n = p + 3 - p%%2,   ts = 1,   m = 0,   k = 111,   ... )"},{"path":"https://henningte.github.io/ir/reference/ir_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooths infrared spectra in an ir object — ir_smooth","text":"x object class ir. method character value specifying smoothing method apply. method = \"sg\", Savitzky-Golay filter applied spectra. Savitzky-Golay smoothing performed using function signal::sgolayfilt(). method = \"fourier\", Fourier smoothing performed. Fourier transformation spectra performed using fast discrete Fourier transformation (FFT) implemented fda::smooth.basis(). smoothing function can defined argment f. p integer value representing filter order (.e. degree polynom) Savitzky-Golay filter method = \"sg\". n odd integer value representing length (.e. number wavenumber values used construct polynom) Savitzky-Golay filter method = \"sg\". ts time scaling factor. See signal::sgolayfilt(). m integer value representing mth derivative compute. option can used compute derivatives spectra. See signal::sgolayfilt(). k positive odd integer representing number Fourier basis functions use smoothed representation spectra method = \"fourier\". ... additional arguments (ignored).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_smooth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooths infrared spectra in an ir object — ir_smooth","text":"x smoothed spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_smooth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooths infrared spectra in an ir object — ir_smooth","text":"x contains spectra different wavenumber values, filters applied spectra existing wavenumber values. means filter window (method == \"sg\") different different spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_smooth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooths infrared spectra in an ir object — ir_smooth","text":"","code":"#' # Savitzky-Golay smoothing x1 <-    ir::ir_sample_data %>%    ir::ir_smooth(method = \"sg\", p = 3, n = 51, ts = 1, m = 0)  # Fourier smoothing x2 <-    ir::ir_sample_data %>%    ir::ir_smooth(method = \"fourier\", k = 21)  # computing derivative spectra with Savitzky-Golay smoothing (here: first # derivative) x3 <-    ir::ir_sample_data %>%    ir::ir_smooth(method = \"sg\", p = 3, n = 51, ts = 1, m = 1)"},{"path":"https://henningte.github.io/ir/reference/ir_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Stacks a matrix or data frame with spectra into a list column — ir_stack","title":"Stacks a matrix or data frame with spectra into a list column — ir_stack","text":"ir_stack takes matrix data frame infrared spectra converts  list column corresponding column spectra objects class ir.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stacks a matrix or data frame with spectra into a list column — ir_stack","text":"","code":"ir_stack(x)"},{"path":"https://henningte.github.io/ir/reference/ir_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stacks a matrix or data frame with spectra into a list column — ir_stack","text":"x matrix data frame first column (x) containing \"x axis values\" spectra (e.g. wavenumbers) remaining columns containing intensity values spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stacks a matrix or data frame with spectra into a list column — ir_stack","text":"tibble::tibble() stacked spectra column spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_stack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stacks a matrix or data frame with spectra into a list column — ir_stack","text":"","code":"# from data frame x1 <-    ir::ir_sample_data %>%    ir::ir_flatten() %>%    ir::ir_stack()  # from matrix x2 <-    ir::ir_sample_data %>%    ir::ir_flatten() %>%    as.matrix() %>%    ir::ir_stack()"},{"path":"https://henningte.github.io/ir/reference/ir_subtract.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtract infrared spectra — ir_subtract","title":"Subtract infrared spectra — ir_subtract","text":"ir_subtract takes two objects class ir, x y, subtracts intensity values spectra matching rows y x. Alternatively, takes object class ir, x, numeric value, y, subtracts y intensity values x.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_subtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtract infrared spectra — ir_subtract","text":"","code":"ir_subtract(x, y)"},{"path":"https://henningte.github.io/ir/reference/ir_subtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subtract infrared spectra — ir_subtract","text":"x object class ir. y object class ir numeic value. y object class ir, must number rows x x axis values (e.g. wavenumber values) matching spectrum x.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_subtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subtract infrared spectra — ir_subtract","text":"x spectrum respective intensity values y subtracted (y object class ir), spectrum y subtracted intensity values.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_subtract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subtract infrared spectra — ir_subtract","text":"","code":"# subtracting two objects of class ir x1 <-   ir::ir_subtract(ir::ir_sample_data, ir::ir_sample_data) x1 <-   ir::ir_subtract(ir::ir_sample_data, ir::ir_sample_data[1, ])  # subtracting a numeric value from an object of class `ir`. x2 <-   ir::ir_subtract(ir::ir_sample_data, 20)"},{"path":"https://henningte.github.io/ir/reference/ir_to_transmittance.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts absorbance spectra to transmittance spectra or vice versa — ir_to_transmittance","title":"Converts absorbance spectra to transmittance spectra or vice versa — ir_to_transmittance","text":"ir_to_transmittance converts absorbance spectra transmittance spectra. ir_to_absorbance converts transmittance spectra absorbance spectra. Note neither function checks whether input spectra absorbance transmittance spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_to_transmittance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts absorbance spectra to transmittance spectra or vice versa — ir_to_transmittance","text":"","code":"ir_to_transmittance(x)  ir_to_absorbance(x)"},{"path":"https://henningte.github.io/ir/reference/ir_to_transmittance.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Converts absorbance spectra to transmittance spectra or vice versa — ir_to_transmittance","text":"(Stuart 2004) .","code":""},{"path":"https://henningte.github.io/ir/reference/ir_to_transmittance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts absorbance spectra to transmittance spectra or vice versa — ir_to_transmittance","text":"x object class ir.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_to_transmittance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts absorbance spectra to transmittance spectra or vice versa — ir_to_transmittance","text":"x y values fore spectrum transmittance values (case ir_to_transmittance) absorbance values (case ir_to_absorbance).","code":""},{"path":"https://henningte.github.io/ir/reference/ir_to_transmittance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Converts absorbance spectra to transmittance spectra or vice versa — ir_to_transmittance","text":"Stuart BH (2004). Infrared Spectroscopy: Fundamentals Applications: Stuart/Infrared Spectroscopy: Fundamentals Applications,  Analytical Techniques Sciences. John Wiley \\& Sons, Ltd, Chichester, UK. ISBN 978-0-470-01114-0 978-0-470-85428-0, doi:10.1002/0470011149 .","code":""},{"path":"https://henningte.github.io/ir/reference/ir_to_transmittance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts absorbance spectra to transmittance spectra or vice versa — ir_to_transmittance","text":"","code":"# convert from absorbance to transmittance x1 <-     ir_sample_data %>%     ir_to_transmittance()  # convert from transmittance to absorbance x2 <-     x1 %>%     ir::ir_to_absorbance()  vapply(   seq_along(x2$spectra),   FUN = function(i) all.equal(x2$spectra[[i]], ir::ir_sample_data$spectra[[i]]),   FUN.VALUE = logical(1L) ) %>%   all() #> [1] TRUE"},{"path":"https://henningte.github.io/ir/reference/ir_variance_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Computes the variance of a spectrum in an ir object in a given region — ir_variance_region","title":"Computes the variance of a spectrum in an ir object in a given region — ir_variance_region","text":"ir_variance_region takes spectrum x , depending arguments computes following summary: subtract_smoothed = FALSE computes variance intensity values spectrum x. addition range NULL, computes variance region(s) represented range. subtract_smoothed = TRUE smoothes x, subtracts smoothed x unsmoothed x computes variance difference intensity values. addition range NULL, computes variance region(s) represented range.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_variance_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computes the variance of a spectrum in an ir object in a given region — ir_variance_region","text":"","code":"ir_variance_region(   x,   subtract_smoothed = FALSE,   do_normalize = FALSE,   normalize_method,   ...,   range = NULL )"},{"path":"https://henningte.github.io/ir/reference/ir_variance_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computes the variance of a spectrum in an ir object in a given region — ir_variance_region","text":"x object class ir. spectra compute variance. subtract_smoothed logical value. subtract_smoothed = TRUE, x copied, copy smoothed using ir_smooth method = \"sg\" subtracted x variance intensity values x computed. allows e.g. estimate noise level specific region spectra. subtract_smoothed = FALSE (default), nothing subtracted x computing variance intensity values. do_normalize logical value. set TRUE, spectra x normalized subtraction smoothed version, else normalization performed. normalize_method See ir_normalize(). ... Arguments passed ir_smooth() (except method always set \"sg\" subtract_smoothed TRUE). subtract_smoothed = FALSE, arguments ignored. range See ir_clip(). range variance intensity values computed.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_variance_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computes the variance of a spectrum in an ir object in a given region — ir_variance_region","text":"x two additional columns: variance numeric vector computed variances intensity values respective spectra. n_variance integer vector number intensity values used computing variance.","code":""},{"path":"https://henningte.github.io/ir/reference/ir_variance_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computes the variance of a spectrum in an ir object in a given region — ir_variance_region","text":"","code":"# Whole spectra variance x1 <-    ir::ir_sample_data %>%    ir::ir_variance_region(       subtract_smoothed = FALSE,       do_normalize = TRUE,       normalize_method = \"area\",       range = NULL    )  # Spectra variance, but only from a specific region range <- data.frame(start = 2700, end = 2800)  x2 <-    ir::ir_sample_data %>%    ir::ir_normalize(method = \"area\") %>%    ir::ir_variance_region(       subtract_smoothed = FALSE,       do_normalize = TRUE,       normalize_method = \"area\",       range = range    )  # Spectra variance after subtracting a smoothed version of the spectra and # only from a specific region x3 <-    ir::ir_sample_data %>%    ir::ir_variance_region(       subtract_smoothed = TRUE,       do_normalize = FALSE,       range = range,       p = 3, n = 31, ts = 1, m = 0    )"},{"path":"https://henningte.github.io/ir/reference/mutate-joins.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutating joins for an ir object — mutate-joins","title":"Mutating joins for an ir object — mutate-joins","text":"Mutating joins ir object","code":""},{"path":"https://henningte.github.io/ir/reference/mutate-joins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutating joins for an ir object — mutate-joins","text":"","code":"inner_join.ir(   x,   y,   by = NULL,   copy = FALSE,   suffix = c(\".x\", \".y\"),   ...,   keep = FALSE,   na_matches = c(\"na\", \"never\") )  left_join.ir(   x,   y,   by = NULL,   copy = FALSE,   suffix = c(\".x\", \".y\"),   ...,   keep = FALSE,   na_matches = c(\"na\", \"never\") )  right_join.ir(   x,   y,   by = NULL,   copy = FALSE,   suffix = c(\".x\", \".y\"),   ...,   keep = FALSE,   na_matches = c(\"na\", \"never\") )  full_join.ir(   x,   y,   by = NULL,   copy = FALSE,   suffix = c(\".x\", \".y\"),   ...,   keep = FALSE,   na_matches = c(\"na\", \"never\") )"},{"path":"https://henningte.github.io/ir/reference/mutate-joins.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mutating joins for an ir object — mutate-joins","text":"mutate-joins","code":""},{"path":"https://henningte.github.io/ir/reference/mutate-joins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutating joins for an ir object — mutate-joins","text":"x object class ir. y data frame. character vector variables join . NULL, default, *_join() perform natural join, using variables common across x y. message lists variables can check correct; suppress message supplying explicitly. join different variables x y, use named vector. example, = c(\"\" = \"b\") match x$y$b. join multiple variables, use vector length > 1. example, = c(\"\", \"b\") match x$y$x$b y$b. Use named vector match different variables x y. example, = c(\"\" = \"b\", \"c\" = \"d\") match x$y$b x$c y$d. perform cross-join, generating combinations x y, use = character(). copy x y data source, copy TRUE, y copied src x.  allows join tables across srcs, potentially expensive operation must opt . suffix non-joined duplicate variables x y, suffixes added output disambiguate . character vector length 2. ... parameters passed onto methods. keep join keys x y preserved output? na_matches NA NaN values match one another? default, \"na\", treats two NA NaN values equal, like %%, match(), merge(). Use \"never\" always treat two NA NaN values different, like joins database sources, similarly merge(incomparables = FALSE).","code":""},{"path":"https://henningte.github.io/ir/reference/mutate-joins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutating joins for an ir object — mutate-joins","text":"x y joined. spectra column renamed, irclass dropped. See mutate-joins.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/mutate-joins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutating joins for an ir object — mutate-joins","text":"","code":"## inner_join set.seed(234) dplyr::inner_join(   ir_sample_data,   tibble::tibble(     id_measurement = c(1:5, 101:105),     nitrogen_content = rbeta(n = 10, 0.2, 0.1)   ),   by = \"id_measurement\" ) #> # A tibble: 5 × 8 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                                 [1] #> 1              1 GN 11-389 needles     Abies Firma Momi fir                0.360 #> 2              2 GN 11-400 needles     Cupressocyparis leylandii …         0.339 #> 3              3 GN 11-407 needles     Juniperus chinensis Chines…         0.268 #> 4              4 GN 11-411 needles     Metasequoia glyptostroboid…         0.350 #> 5              5 GN 11-416 needles     Pinus strobus Torulosa              0.331 #> # … with 3 more variables: holocellulose [1], spectra <named list>, #> #   nitrogen_content <dbl>   ## left_join set.seed(234) dplyr::left_join(   ir_sample_data,   tibble::tibble(     id_measurement = c(1:5, 101:105),     nitrogen_content = rbeta(n = 10, 0.2, 0.1)   ),   by = \"id_measurement\" ) #> # A tibble: 58 × 8 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde…         0.279 #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali…         0.330 #>  8              8 GN 11-423 needles     Taxodium distichum Cascad…         0.357 #>  9              9 GN 11-428 needles     Thuja occidentalis Easter…         0.369 #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin…         0.289 #> # … with 48 more rows, and 3 more variables: holocellulose [1], #> #   spectra <named list>, nitrogen_content <dbl>   ## right_join set.seed(234) dplyr::right_join(   ir_sample_data,   tibble::tibble(     id_measurement = c(1:5, 101:105),     nitrogen_content = rbeta(n = 10, 0.2, 0.1)   ),   by = \"id_measurement\" ) #> # A tibble: 10 × 8 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6            101 NA        NA          NA                                NA     #>  7            102 NA        NA          NA                                NA     #>  8            103 NA        NA          NA                                NA     #>  9            104 NA        NA          NA                                NA     #> 10            105 NA        NA          NA                                NA     #> # … with 3 more variables: holocellulose [1], spectra <named list>, #> #   nitrogen_content <dbl>   ## full_join set.seed(234) dplyr::full_join(   ir_sample_data,   tibble::tibble(     id_measurement = c(1:5, 101:105),     nitrogen_content = rbeta(n = 10, 0.2, 0.1)   ),   by = \"id_measurement\" ) #> # A tibble: 63 × 8 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde…         0.279 #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali…         0.330 #>  8              8 GN 11-423 needles     Taxodium distichum Cascad…         0.357 #>  9              9 GN 11-428 needles     Thuja occidentalis Easter…         0.369 #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin…         0.289 #> # … with 53 more rows, and 3 more variables: holocellulose [1], #> #   spectra <named list>, nitrogen_content <dbl>"},{"path":"https://henningte.github.io/ir/reference/mutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate an ir object by adding new or replacing existing columns — mutate","title":"Mutate an ir object by adding new or replacing existing columns — mutate","text":"Mutate ir object adding new replacing existing columns","code":""},{"path":"https://henningte.github.io/ir/reference/mutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate an ir object by adding new or replacing existing columns — mutate","text":"","code":"mutate.ir(   .data,   ...,   .keep = c(\"all\", \"used\", \"unused\", \"none\"),   .before = NULL,   .after = NULL )  transmute.ir(.data, ...)"},{"path":"https://henningte.github.io/ir/reference/mutate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mutate an ir object by adding new or replacing existing columns — mutate","text":"dplyr::mutate()","code":""},{"path":"https://henningte.github.io/ir/reference/mutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate an ir object by adding new or replacing existing columns — mutate","text":".data object class ir. ... <data-masking> Name-value pairs. name gives name column output. value can : vector length 1, recycled correct length. vector length current group (whole data frame ungrouped). NULL, remove column. data frame tibble, create multiple columns output. .keep Control columns .data retained output. Grouping columns columns created ... always kept. \"\" retains columns .data. default. \"used\" retains columns used ... create new columns. useful checking work, displays inputs outputs side--side. \"unused\" retains columns used ... create new columns. useful generate new columns, longer need columns used generate . \"none\" retain extra columns .data. grouping variables columns created ... kept. ., .<tidy-select> Optionally, control new columns appear (default add right hand side). See relocate() details.","code":""},{"path":"https://henningte.github.io/ir/reference/mutate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate an ir object by adding new or replacing existing columns — mutate","text":".data modified columns. spectra column dropped invalidated (see ir_new_ir()), ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/mutate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate an ir object by adding new or replacing existing columns — mutate","text":"","code":"## mutate dplyr::mutate(ir_sample_data, hkl = klason_lignin + holocellulose) #> # A tibble: 58 × 8 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde…         0.279 #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali…         0.330 #>  8              8 GN 11-423 needles     Taxodium distichum Cascad…         0.357 #>  9              9 GN 11-428 needles     Thuja occidentalis Easter…         0.369 #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin…         0.289 #> # … with 48 more rows, and 3 more variables: holocellulose [1], #> #   spectra <named list>, hkl [1]   ## transmute dplyr::transmute(ir_sample_data, hkl = klason_lignin + holocellulose) #> # A tibble: 58 × 1 #>      hkl #>  *   [1] #>  1 0.668 #>  2 0.589 #>  3 0.604 #>  4 0.534 #>  5 0.640 #>  6 0.615 #>  7 0.570 #>  8 0.482 #>  9 0.621 #> 10 0.638 #> # … with 48 more rows"},{"path":"https://henningte.github.io/ir/reference/nest.html","id":null,"dir":"Reference","previous_headings":"","what":"Nest and un-nest an ir object — nest","title":"Nest and un-nest an ir object — nest","text":"Nest un-nest ir object","code":""},{"path":"https://henningte.github.io/ir/reference/nest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nest and un-nest an ir object — nest","text":"","code":"nest.ir(.data, ..., .names_sep = NULL, .key = deprecated())  unnest.ir(   data,   cols,   ...,   keep_empty = FALSE,   ptype = NULL,   names_sep = NULL,   names_repair = \"check_unique\",   .drop = deprecated(),   .id = deprecated(),   .sep = deprecated(),   .preserve = deprecated() )"},{"path":"https://henningte.github.io/ir/reference/nest.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Nest and un-nest an ir object — nest","text":"tidyr::nest()","code":""},{"path":"https://henningte.github.io/ir/reference/nest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nest and un-nest an ir object — nest","text":".data object class ir. ... <tidy-select> Columns nest, specified using name-variable pairs form new_col = c(col1, col2, col3). right hand side can valid tidy select expression. : previously write df %>% nest(x, y, z) df %>% unnest(x, y, z). Convert df %>% nest(data = c(x, y, z)). df %>% unnest(c(x, y, z)). previously created new variable unnest() now need explicitly mutate(). Convert df %>% unnest(y = fun(x, y, z)) df %>% mutate(y = fun(x, y, z)) %>% unnest(y). .key : longer needed new new_col = c(col1, col2, col3) syntax. data data frame. cols <tidy-select> Columns unnest. unnest() multiple columns, parallel entries must compatible sizes, .e. either equal length 1 (following standard tidyverse recycling rules). keep_empty default, get one row output element list unchopping/unnesting. means size-0 element (like NULL empty data frame), entire row dropped output. want preserve rows, use keep_empty = TRUE replace size-0 elements single row missing values. ptype Optionally, named list column name-prototype pairs coerce cols , overriding default guessed combining individual values. Alternatively, single empty ptype can supplied, applied cols. names_sep, .names_sep NULL, default, names left . nest(), inner names come former outer names; unnest(), new outer names come inner names. string, inner outer names used together. unnest(), names new outer columns formed pasting together outer inner column names, separated names_sep. nest(), new inner names outer names + names_sep automatically stripped. makes names_sep roughly symmetric nesting unnesting. names_repair Used check output data frame valid names. Must one following options: \"minimal\": name repair checks, beyond basic existence, \"unique\": make sure names unique empty, \"check_unique\": (default), name repair, check unique, \"universal\": make names unique syntactic function: apply custom name repair. tidyr_legacy: use name repair tidyr 0.8. formula: purrr-style anonymous function (see rlang::as_function()) See vctrs::vec_as_names() details terms strategies used enforce . .drop, .preserve : list-columns now preserved; want output use select() remove prior unnesting. .id : convert df %>% unnest(x, .id = \"id\") df %>% mutate(id = names(x)) %>% unnest(x)). .sep : use names_sep instead.","code":""},{"path":"https://henningte.github.io/ir/reference/nest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nest and un-nest an ir object — nest","text":".data nested unnested columns. spectra column dropped invalidated (see ir_new_ir()), ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/nest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nest and un-nest an ir object — nest","text":"","code":"## nest ir_sample_data %>%   tidyr::nest(     contents = c(holocellulose, klason_lignin)   ) #> # A tibble: 58 × 6 #>    id_measurement id_sample sample_type sample_comment         spectra  contents #>  *          <int> <chr>     <chr>       <chr>                  <named > <list>   #>  1              1 GN 11-389 needles     Abies Firma Momi fir   <tibble> <tibble> #>  2              2 GN 11-400 needles     Cupressocyparis leyla… <tibble> <tibble> #>  3              3 GN 11-407 needles     Juniperus chinensis C… <tibble> <tibble> #>  4              4 GN 11-411 needles     Metasequoia glyptostr… <tibble> <tibble> #>  5              5 GN 11-416 needles     Pinus strobus Torulosa <tibble> <tibble> #>  6              6 GN 11-419 needles     Pseudolarix amabili G… <tibble> <tibble> #>  7              7 GN 11-422 needles     Sequoia sempervirens … <tibble> <tibble> #>  8              8 GN 11-423 needles     Taxodium distichum Ca… <tibble> <tibble> #>  9              9 GN 11-428 needles     Thuja occidentalis Ea… <tibble> <tibble> #> 10             10 GN 11-434 needles     Tsuga caroliniana Car… <tibble> <tibble> #> # … with 48 more rows   ## unnest ir_sample_data %>%   tidyr::nest(     contents = c(holocellulose, klason_lignin)   ) %>%   tidyr::unnest(\"contents\") #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment    spectra  holocellulose #>             <int> <chr>     <chr>       <chr>             <named >           [1] #>  1              1 GN 11-389 needles     Abies Firma Momi… <tibble>         0.308 #>  2              2 GN 11-400 needles     Cupressocyparis … <tibble>         0.250 #>  3              3 GN 11-407 needles     Juniperus chinen… <tibble>         0.336 #>  4              4 GN 11-411 needles     Metasequoia glyp… <tibble>         0.184 #>  5              5 GN 11-416 needles     Pinus strobus To… <tibble>         0.309 #>  6              6 GN 11-419 needles     Pseudolarix amab… <tibble>         0.335 #>  7              7 GN 11-422 needles     Sequoia sempervi… <tibble>         0.241 #>  8              8 GN 11-423 needles     Taxodium distich… <tibble>         0.125 #>  9              9 GN 11-428 needles     Thuja occidental… <tibble>         0.252 #> 10             10 GN 11-434 needles     Tsuga carolinian… <tibble>         0.349 #> # … with 48 more rows, and 1 more variable: klason_lignin [1]"},{"path":"https://henningte.github.io/ir/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://henningte.github.io/ir/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://henningte.github.io/ir/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://henningte.github.io/ir/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://henningte.github.io/ir/reference/pivot_longer.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot an ir object from wide to long — pivot_longer.ir","title":"Pivot an ir object from wide to long — pivot_longer.ir","text":"Pivot ir object wide long","code":""},{"path":"https://henningte.github.io/ir/reference/pivot_longer.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot an ir object from wide to long — pivot_longer.ir","text":"","code":"pivot_longer.ir(   data,   cols,   names_to = \"name\",   names_prefix = NULL,   names_sep = NULL,   names_pattern = NULL,   names_ptypes = list(),   names_transform = list(),   names_repair = \"check_unique\",   values_to = \"value\",   values_drop_na = FALSE,   values_ptypes = list(),   values_transform = list(),   ... )"},{"path":"https://henningte.github.io/ir/reference/pivot_longer.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pivot an ir object from wide to long — pivot_longer.ir","text":"tidyr::pivot_longer()","code":""},{"path":"https://henningte.github.io/ir/reference/pivot_longer.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot an ir object from wide to long — pivot_longer.ir","text":"data object class ir. cols <tidy-select> Columns pivot longer format. names_to character vector specifying new column columns create information stored column names data specified cols. length 0, NULL supplied, columns created. length 1, single column created contain column names specified cols. length >1, multiple columns created. case, one names_sep names_pattern must supplied specify column names split. also two additional character values can take advantage : NA discard corresponding component column name. \".value\" indicates corresponding component column name defines name output column containing cell values, overriding values_to entirely. names_prefix regular expression used remove matching text start variable name. names_sep, names_pattern names_to contains multiple values, arguments control column name broken . names_sep takes specification separate(), can either numeric vector (specifying positions break ), single string (specifying regular expression split ). names_pattern takes specification extract(), regular expression containing matching groups (()). arguments give enough control, use pivot_longer_spec() create spec object process manually needed. names_ptypes, values_ptypes Optionally, list column name-prototype pairs. Alternatively, single empty prototype can supplied, applied columns. prototype (ptype short) zero-length vector (like integer() numeric()) defines type, class, attributes vector. Use arguments want confirm created columns types expect. Note want change (instead confirm) types specific columns, use names_transform values_transform instead. backwards compatibility reasons, supplying list() interpreted identical NULL rather using list prototype columns. Expect change future. names_transform, values_transform Optionally, list column name-function pairs. Alternatively, single function can supplied, applied columns. Use arguments need change types specific columns. example, names_transform = list(week = .integer) convert character variable called week integer. specified, type columns generated names_to character, type variables generated values_to common type input columns used generate . names_repair happens output invalid column names? default, \"check_unique\" error columns duplicated. Use \"minimal\" allow duplicates output, \"unique\" de-duplicated adding numeric suffixes. See vctrs::vec_as_names() options. values_to string specifying name column create data stored cell values. names_to character containing special .value sentinel, value ignored, name value column derived part existing column names. values_drop_na TRUE, drop rows contain NAs value_to column. effectively converts explicit missing values implicit missing values, generally used missing values data created structure. ... Additional arguments passed methods.","code":""},{"path":"https://henningte.github.io/ir/reference/pivot_longer.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot an ir object from wide to long — pivot_longer.ir","text":"data long format. spectra column dropped invalidated (see ir_new_ir()), ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/pivot_longer.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot an ir object from wide to long — pivot_longer.ir","text":"","code":"## pivot_longer ir_sample_data %>%   tidyr::pivot_longer(     cols = dplyr::any_of(c(\"holocellulose\", \"klason_lignin\"))   ) #> # A tibble: 116 × 7 #>    id_measurement id_sample sample_type sample_comment      spectra  name  value #>  *          <int> <chr>     <chr>       <chr>               <named > <chr>   [1] #>  1              1 GN 11-389 needles     Abies Firma Momi f… <tibble> holo… 0.308 #>  2              1 GN 11-389 needles     Abies Firma Momi f… <tibble> klas… 0.360 #>  3              2 GN 11-400 needles     Cupressocyparis le… <tibble> holo… 0.250 #>  4              2 GN 11-400 needles     Cupressocyparis le… <tibble> klas… 0.339 #>  5              3 GN 11-407 needles     Juniperus chinensi… <tibble> holo… 0.336 #>  6              3 GN 11-407 needles     Juniperus chinensi… <tibble> klas… 0.268 #>  7              4 GN 11-411 needles     Metasequoia glypto… <tibble> holo… 0.184 #>  8              4 GN 11-411 needles     Metasequoia glypto… <tibble> klas… 0.350 #>  9              5 GN 11-416 needles     Pinus strobus Toru… <tibble> holo… 0.309 #> 10              5 GN 11-416 needles     Pinus strobus Toru… <tibble> klas… 0.331 #> # … with 106 more rows"},{"path":"https://henningte.github.io/ir/reference/pivot_wider.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot an ir object from wide to long — pivot_wider.ir","title":"Pivot an ir object from wide to long — pivot_wider.ir","text":"Pivot ir object wide long","code":""},{"path":"https://henningte.github.io/ir/reference/pivot_wider.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot an ir object from wide to long — pivot_wider.ir","text":"","code":"pivot_wider.ir(   data,   id_cols = NULL,   names_from = \"name\",   names_prefix = \"\",   names_sep = \"_\",   names_glue = NULL,   names_sort = FALSE,   names_repair = \"check_unique\",   values_from = \"value\",   values_fill = NULL,   values_fn = NULL,   ... )"},{"path":"https://henningte.github.io/ir/reference/pivot_wider.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pivot an ir object from wide to long — pivot_wider.ir","text":"tidyr::pivot_wider()","code":""},{"path":"https://henningte.github.io/ir/reference/pivot_wider.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot an ir object from wide to long — pivot_wider.ir","text":"data object class ir. id_cols <tidy-select> set columns uniquely identifies observation. Defaults columns data except columns specified names_from values_from. Typically used redundant variables, .e. variables whose values perfectly correlated existing variables. names_from, values_from <tidy-select> pair arguments describing column (columns) get name output column (names_from), column (columns) get cell values (values_from). values_from contains multiple values, value added front output column. names_prefix String added start every variable name. particularly useful names_from numeric vector want create syntactic variable names. names_sep names_from values_from contains multiple variables, used join values together single string use column name. names_glue Instead names_sep names_prefix, can supply glue specification uses names_from columns (special .value) create custom column names. names_sort column names sorted? FALSE, default, column names ordered first appearance. names_repair happens output invalid column names? default, \"check_unique\" error columns duplicated. Use \"minimal\" allow duplicates output, \"unique\" de-duplicated adding numeric suffixes. See vctrs::vec_as_names() options. values_fill Optionally, (scalar) value specifies value filled missing. can named list want apply different fill values different value columns. values_fn Optionally, function applied value cell output. typically use combination id_cols names_from columns uniquely identify observation. can named list want apply different aggregations different values_from columns. ... Additional arguments passed methods.","code":""},{"path":"https://henningte.github.io/ir/reference/pivot_wider.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot an ir object from wide to long — pivot_wider.ir","text":"data wide format. spectra column dropped invalidated (see ir_new_ir()), ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/pivot_wider.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot an ir object from wide to long — pivot_wider.ir","text":"","code":"## pivot_wider ir_sample_data %>%   tidyr::pivot_longer(     cols = dplyr::any_of(c(\"holocellulose\", \"klason_lignin\"))   ) %>%   tidyr::pivot_wider(names_from = \"name\", values_from = \"value\") #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment    spectra  holocellulose #>             <int> <chr>     <chr>       <chr>             <named >           [1] #>  1              1 GN 11-389 needles     Abies Firma Momi… <tibble>         0.308 #>  2              2 GN 11-400 needles     Cupressocyparis … <tibble>         0.250 #>  3              3 GN 11-407 needles     Juniperus chinen… <tibble>         0.336 #>  4              4 GN 11-411 needles     Metasequoia glyp… <tibble>         0.184 #>  5              5 GN 11-416 needles     Pinus strobus To… <tibble>         0.309 #>  6              6 GN 11-419 needles     Pseudolarix amab… <tibble>         0.335 #>  7              7 GN 11-422 needles     Sequoia sempervi… <tibble>         0.241 #>  8              8 GN 11-423 needles     Taxodium distich… <tibble>         0.125 #>  9              9 GN 11-428 needles     Thuja occidental… <tibble>         0.252 #> 10             10 GN 11-434 needles     Tsuga carolinian… <tibble>         0.349 #> # … with 48 more rows, and 1 more variable: klason_lignin [1]"},{"path":"https://henningte.github.io/ir/reference/plot.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots an object of class ir — plot.ir","title":"Plots an object of class ir — plot.ir","text":"plot.ir plot method objects class ir.","code":""},{"path":"https://henningte.github.io/ir/reference/plot.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots an object of class ir — plot.ir","text":"","code":"# S3 method for ir plot(x, ...)"},{"path":"https://henningte.github.io/ir/reference/plot.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots an object of class ir — plot.ir","text":"x object class ir. ... arguments, ignored.","code":""},{"path":"https://henningte.github.io/ir/reference/plot.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots an object of class ir — plot.ir","text":"object class ggplot2.","code":""},{"path":"https://henningte.github.io/ir/reference/plot.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots an object of class ir — plot.ir","text":"","code":"# simple plotting plot(ir::ir_sample_data[1:2, ])   # advanced functions plot(ir::ir_sample_data) +    ggplot2::facet_wrap(~ sample_type)"},{"path":"https://henningte.github.io/ir/reference/range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the minima/maxima/range/median of x axis values or intensity values of infrared spectra — range","title":"Get the minima/maxima/range/median of x axis values or intensity values of infrared spectra — range","text":"range.ir extracts range x axis values (e.g. wavenumbers) intensity values infrared spectra. min.ir extracts minimum x axis value (e.g. wavenumber) intensity value infrared spectra. max.ir extracts maximum x axis value (e.g. wavenumber) intensity value infrared spectra. median.ir extracts median x axis value (e.g. wavenumber) intensity value infrared spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the minima/maxima/range/median of x axis values or intensity values of infrared spectra — range","text":"","code":"# S3 method for ir range(   x,   ...,   na.rm = FALSE,   .dimension = \"y\",   .col_names = c(\"y_min\", \"y_max\") )  # S3 method for ir min(x, ..., na.rm = FALSE, .dimension = \"y\", .col_name = \"y_min\")  # S3 method for ir max(x, ..., na.rm = FALSE, .dimension = \"y\", .col_name = \"y_max\")  # S3 method for ir median(x, na.rm = FALSE, ..., .dimension = \"y\", .col_name = \"y_median\")"},{"path":"https://henningte.github.io/ir/reference/range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the minima/maxima/range/median of x axis values or intensity values of infrared spectra — range","text":"x object class ir. ... arguments, ignored. na.rm logical value. See max(). .dimension character value. Must one following: \"x\" case, minimum/maximum/range/median x axis values spectra x extracted. \"y\" case, minimum/maximum/range/median intensity values spectra x extracted. .col_names character vector length 2 representing names columns store extracted values. first element name column minima values, second name column maxima values. .col_name character value representing name column store extracted values.","code":""},{"path":"https://henningte.github.io/ir/reference/range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the minima/maxima/range/median of x axis values or intensity values of infrared spectra — range","text":"x extracted values.","code":""},{"path":"https://henningte.github.io/ir/reference/range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the minima/maxima/range/median of x axis values or intensity values of infrared spectra — range","text":"","code":"# range of intensity values x1 <-    ir::ir_sample_data %>%    range(.dimension = \"y\")  # minimum intensity values x1 <-    ir::ir_sample_data %>%    min(.dimension = \"y\")  # maximum intensity values x1 <-    ir::ir_sample_data %>%    max(.dimension = \"y\")  # median intensity values x1 <-    ir::ir_sample_data %>%    stats::median(.dimension = \"y\")"},{"path":"https://henningte.github.io/ir/reference/rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns in ir objects — rename","title":"Rename columns in ir objects — rename","text":"Rename columns ir objects","code":""},{"path":"https://henningte.github.io/ir/reference/rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns in ir objects — rename","text":"","code":"rename.ir(.data, ...)  rename_with.ir(.data, .fn, .cols = dplyr::everything(), ...)"},{"path":"https://henningte.github.io/ir/reference/rename.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Rename columns in ir objects — rename","text":"dplyr::rename()","code":""},{"path":"https://henningte.github.io/ir/reference/rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns in ir objects — rename","text":".data object class ir. ... rename(): <tidy-select> Use new_name = old_name rename selected variables. rename_with(): additional arguments passed onto .fn. .fn function used transform selected .cols. return character vector length input. .cols <tidy-select> Columns rename; defaults columns.","code":""},{"path":"https://henningte.github.io/ir/reference/rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns in ir objects — rename","text":".data renamed columns. spectra column renamed, new valid spectra column created, ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns in ir objects — rename","text":"","code":"## rename dplyr::rename(ir_sample_data, hol = \"holocellulose\") #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment       klason_lignin   hol #>  *          <int> <chr>     <chr>       <chr>                          [1]   [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir         0.360 0.308 #>  2              2 GN 11-400 needles     Cupressocyparis ley…         0.339 0.250 #>  3              3 GN 11-407 needles     Juniperus chinensis…         0.268 0.336 #>  4              4 GN 11-411 needles     Metasequoia glyptos…         0.350 0.184 #>  5              5 GN 11-416 needles     Pinus strobus Torul…         0.331 0.309 #>  6              6 GN 11-419 needles     Pseudolarix amabili…         0.279 0.335 #>  7              7 GN 11-422 needles     Sequoia semperviren…         0.330 0.241 #>  8              8 GN 11-423 needles     Taxodium distichum …         0.357 0.125 #>  9              9 GN 11-428 needles     Thuja occidentalis …         0.369 0.252 #> 10             10 GN 11-434 needles     Tsuga caroliniana C…         0.289 0.349 #> # … with 48 more rows, and 1 more variable: spectra <named list> dplyr::rename(ir_sample_data, spec = \"spectra\") # drops ir class #> # A tibble: 58 × 7 #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde…         0.279 #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali…         0.330 #>  8              8 GN 11-423 needles     Taxodium distichum Cascad…         0.357 #>  9              9 GN 11-428 needles     Thuja occidentalis Easter…         0.369 #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin…         0.289 #> # … with 48 more rows, and 2 more variables: holocellulose [1], #> #   spec <named list>   ## rename_with dplyr::rename_with(ir_sample_data, .cols = dplyr::starts_with(\"id_\"),   toupper) #> # A tibble: 58 × 7 #>    ID_MEASUREMENT ID_SAMPLE sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde…         0.279 #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali…         0.330 #>  8              8 GN 11-423 needles     Taxodium distichum Cascad…         0.357 #>  9              9 GN 11-428 needles     Thuja occidentalis Easter…         0.369 #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin…         0.289 #> # … with 48 more rows, and 2 more variables: holocellulose [1], #> #   spectra <named list> dplyr::rename_with(ir_sample_data, toupper) # drops ir class #> # A tibble: 58 × 7 #>    ID_MEASUREMENT ID_SAMPLE SAMPLE_TYPE SAMPLE_COMMENT             KLASON_LIGNIN #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde…         0.279 #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali…         0.330 #>  8              8 GN 11-423 needles     Taxodium distichum Cascad…         0.357 #>  9              9 GN 11-428 needles     Thuja occidentalis Easter…         0.369 #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin…         0.289 #> # … with 48 more rows, and 2 more variables: HOLOCELLULOSE [1], #> #   SPECTRA <named list>"},{"path":"https://henningte.github.io/ir/reference/rep.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Replicate ir objects — rep.ir","title":"Replicate ir objects — rep.ir","text":"rep.ir replicate method ir objects. Replicating ir object means replicate rows bind together larger ir object.","code":""},{"path":"https://henningte.github.io/ir/reference/rep.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replicate ir objects — rep.ir","text":"","code":"# S3 method for ir rep(x, ...)"},{"path":"https://henningte.github.io/ir/reference/rep.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replicate ir objects — rep.ir","text":"x object class ir. ... See rep().","code":""},{"path":"https://henningte.github.io/ir/reference/rep.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replicate ir objects — rep.ir","text":"object class ir replicated spectra.","code":""},{"path":"https://henningte.github.io/ir/reference/rep.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replicate ir objects — rep.ir","text":"","code":"# replicate the sample data x <- rep(ir::ir_sample_data, times = 2) x <- rep(ir::ir_sample_data, each = 2) x <- rep(ir::ir_sample_data, length.out = 3)"},{"path":"https://henningte.github.io/ir/reference/rowwise.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Group input ir objects by rows — rowwise.ir","title":"Group input ir objects by rows — rowwise.ir","text":"Group input ir objects rows","code":""},{"path":"https://henningte.github.io/ir/reference/rowwise.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group input ir objects by rows — rowwise.ir","text":"","code":"rowwise.ir(.data, ...)"},{"path":"https://henningte.github.io/ir/reference/rowwise.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Group input ir objects by rows — rowwise.ir","text":"dplyr::rowwise()","code":""},{"path":"https://henningte.github.io/ir/reference/rowwise.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group input ir objects by rows — rowwise.ir","text":".data Input data frame. ... <tidy-select> Variables preserved calling summarise(). typically set variables whose combination uniquely identify row. NB: unlike group_by() can create new variables instead can select multiple variables (e.g.) everything(). data object class ir.","code":""},{"path":"https://henningte.github.io/ir/reference/rowwise.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group input ir objects by rows — rowwise.ir","text":"data row-wise data frame. See dplyr::rowwise().","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/rowwise.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group input ir objects by rows — rowwise.ir","text":"","code":"## rowwise dplyr::rowwise(ir_sample_data) %>%   dplyr::mutate(     hkl =       mean(         units::drop_units(klason_lignin),         units::drop_units(holocellulose)       )   ) #> # A tibble: 58 × 8 #> # Rowwise:  #>    id_measurement id_sample sample_type sample_comment             klason_lignin #>  *          <int> <chr>     <chr>       <chr>                                [1] #>  1              1 GN 11-389 needles     Abies Firma Momi fir               0.360 #>  2              2 GN 11-400 needles     Cupressocyparis leylandii…         0.339 #>  3              3 GN 11-407 needles     Juniperus chinensis Chine…         0.268 #>  4              4 GN 11-411 needles     Metasequoia glyptostroboi…         0.350 #>  5              5 GN 11-416 needles     Pinus strobus Torulosa             0.331 #>  6              6 GN 11-419 needles     Pseudolarix amabili Golde…         0.279 #>  7              7 GN 11-422 needles     Sequoia sempervirens Cali…         0.330 #>  8              8 GN 11-423 needles     Taxodium distichum Cascad…         0.357 #>  9              9 GN 11-428 needles     Thuja occidentalis Easter…         0.369 #> 10             10 GN 11-434 needles     Tsuga caroliniana Carolin…         0.289 #> # … with 48 more rows, and 3 more variables: holocellulose [1], #> #   spectra <named list>, hkl <dbl>"},{"path":"https://henningte.github.io/ir/reference/select.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset columns in ir objects using column names and types — select.ir","title":"Subset columns in ir objects using column names and types — select.ir","text":"Subset columns ir objects using column names types","code":""},{"path":"https://henningte.github.io/ir/reference/select.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset columns in ir objects using column names and types — select.ir","text":"","code":"select.ir(.data, ...)"},{"path":"https://henningte.github.io/ir/reference/select.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Subset columns in ir objects using column names and types — select.ir","text":"dplyr::select()","code":""},{"path":"https://henningte.github.io/ir/reference/select.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset columns in ir objects using column names and types — select.ir","text":".data object class ir. ... <tidy-select> One unquoted expressions separated commas. Variable names can used positions data frame, expressions like x:y can used select range variables.","code":""},{"path":"https://henningte.github.io/ir/reference/select.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset columns in ir objects using column names and types — select.ir","text":".data selected columns. spectra column dropped, ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/select.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset columns in ir objects using column names and types — select.ir","text":"","code":"## select dplyr::select(ir_sample_data, spectra) #> # A tibble: 58 × 1 #>    spectra              #>  * <named list>         #>  1 <tibble [3,351 × 2]> #>  2 <tibble [3,351 × 2]> #>  3 <tibble [3,351 × 2]> #>  4 <tibble [3,351 × 2]> #>  5 <tibble [3,351 × 2]> #>  6 <tibble [3,351 × 2]> #>  7 <tibble [3,351 × 2]> #>  8 <tibble [3,351 × 2]> #>  9 <tibble [3,351 × 2]> #> 10 <tibble [3,351 × 2]> #> # … with 48 more rows dplyr::select(ir_sample_data, holocellulose) # drops ir class #> # A tibble: 58 × 1 #>    holocellulose #>  *           [1] #>  1         0.308 #>  2         0.250 #>  3         0.336 #>  4         0.184 #>  5         0.309 #>  6         0.335 #>  7         0.241 #>  8         0.125 #>  9         0.252 #> 10         0.349 #> # … with 48 more rows"},{"path":"https://henningte.github.io/ir/reference/separate.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate a character column in an ir object into multiple columns with a regular expression or numeric locations — separate.ir","title":"Separate a character column in an ir object into multiple columns with a regular expression or numeric locations — separate.ir","text":"Separate character column ir object multiple columns regular expression numeric locations","code":""},{"path":"https://henningte.github.io/ir/reference/separate.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate a character column in an ir object into multiple columns with a regular expression or numeric locations — separate.ir","text":"","code":"separate.ir(   data,   col,   into,   sep = \"[^[:alnum:]]+\",   remove = TRUE,   convert = FALSE,   extra = \"warn\",   fill = \"warn\",   ... )"},{"path":"https://henningte.github.io/ir/reference/separate.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Separate a character column in an ir object into multiple columns with a regular expression or numeric locations — separate.ir","text":"tidyr::separate()","code":""},{"path":"https://henningte.github.io/ir/reference/separate.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate a character column in an ir object into multiple columns with a regular expression or numeric locations — separate.ir","text":"data object class ir. col Column name position. passed tidyselect::vars_pull(). argument passed expression supports quasiquotation (can unquote column names column positions). Names new variables create character vector. Use NA omit variable output. sep Separator columns. character, sep interpreted regular expression. default value regular expression matches sequence non-alphanumeric values. numeric, sep interpreted character positions split . Positive values start 1 far-left string; negative value start -1 far-right string. length sep one less . remove TRUE, remove input column output data frame. convert TRUE, run type.convert() .= TRUE new columns. useful component columns integer, numeric logical. NB: cause string \"NA\"s converted NAs. extra sep character vector, controls happens many pieces. three valid options: \"warn\" (default): emit warning drop extra values. \"drop\": drop extra values without warning. \"merge\": splits length() times fill sep character vector, controls happens enough pieces. three valid options: \"warn\" (default): emit warning fill right \"right\": fill missing values right \"left\": fill missing values left ... Additional arguments passed methods.","code":""},{"path":"https://henningte.github.io/ir/reference/separate.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate a character column in an ir object into multiple columns with a regular expression or numeric locations — separate.ir","text":".data separated columns. spectra column dropped invalidated (see ir_new_ir()), ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/separate.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate a character column in an ir object into multiple columns with a regular expression or numeric locations — separate.ir","text":"","code":"## separate ir_sample_data %>%   tidyr::separate(     col = \"id_sample\",  c(\"a\", \"b\", \"c\")   ) #> # A tibble: 58 × 9 #>    id_measurement a     b     c     sample_type sample_comment     klason_lignin #>  *          <int> <chr> <chr> <chr> <chr>       <chr>                        [1] #>  1              1 GN    11    389   needles     Abies Firma Momi …         0.360 #>  2              2 GN    11    400   needles     Cupressocyparis l…         0.339 #>  3              3 GN    11    407   needles     Juniperus chinens…         0.268 #>  4              4 GN    11    411   needles     Metasequoia glypt…         0.350 #>  5              5 GN    11    416   needles     Pinus strobus Tor…         0.331 #>  6              6 GN    11    419   needles     Pseudolarix amabi…         0.279 #>  7              7 GN    11    422   needles     Sequoia sempervir…         0.330 #>  8              8 GN    11    423   needles     Taxodium distichu…         0.357 #>  9              9 GN    11    428   needles     Thuja occidentali…         0.369 #> 10             10 GN    11    434   needles     Tsuga caroliniana…         0.289 #> # … with 48 more rows, and 2 more variables: holocellulose [1], #> #   spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/separate_rows.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate a collapsed column in an ir object into multiple rows — separate_rows.ir","title":"Separate a collapsed column in an ir object into multiple rows — separate_rows.ir","text":"Separate collapsed column ir object multiple rows","code":""},{"path":"https://henningte.github.io/ir/reference/separate_rows.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate a collapsed column in an ir object into multiple rows — separate_rows.ir","text":"","code":"separate_rows.ir(data, ..., sep = \"[^[:alnum:].]+\", convert = FALSE)"},{"path":"https://henningte.github.io/ir/reference/separate_rows.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Separate a collapsed column in an ir object into multiple rows — separate_rows.ir","text":"tidyr::separate_rows()","code":""},{"path":"https://henningte.github.io/ir/reference/separate_rows.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate a collapsed column in an ir object into multiple rows — separate_rows.ir","text":"data object class ir. ... <tidy-select> Columns separate across multiple rows sep Separator delimiting collapsed values. convert TRUE automatically run type.convert() key column. useful column types actually numeric, integer, logical.","code":""},{"path":"https://henningte.github.io/ir/reference/separate_rows.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate a collapsed column in an ir object into multiple rows — separate_rows.ir","text":"data collapsed column separated multiple rows. See tidyr::separate_rows().","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/separate_rows.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Separate a collapsed column in an ir object into multiple rows — separate_rows.ir","text":"","code":"## separate_rows ir_sample_data %>%   tidyr::unite(     col = content, holocellulose, klason_lignin   ) %>%   tidyr::separate_rows(     col   ) #> # A tibble: 116 × 6 #>    id_measurement id_sample sample_type sample_comment            col   spectra  #>  *          <int> <chr>     <chr>       <chr>                     <chr> <named > #>  1              1 GN 11-389 needles     Abies Firma Momi fir      0.30… <tibble> #>  2              1 GN 11-389 needles     Abies Firma Momi fir      0.35… <tibble> #>  3              2 GN 11-400 needles     Cupressocyparis leylandi… 0.24… <tibble> #>  4              2 GN 11-400 needles     Cupressocyparis leylandi… 0.33… <tibble> #>  5              3 GN 11-407 needles     Juniperus chinensis Chin… 0.33… <tibble> #>  6              3 GN 11-407 needles     Juniperus chinensis Chin… 0.26… <tibble> #>  7              4 GN 11-411 needles     Metasequoia glyptostrobo… 0.18… <tibble> #>  8              4 GN 11-411 needles     Metasequoia glyptostrobo… 0.35… <tibble> #>  9              5 GN 11-416 needles     Pinus strobus Torulosa    0.30… <tibble> #> 10              5 GN 11-416 needles     Pinus strobus Torulosa    0.33… <tibble> #> # … with 106 more rows"},{"path":"https://henningte.github.io/ir/reference/slice.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset rows in ir objects using their positions — slice","title":"Subset rows in ir objects using their positions — slice","text":"Subset rows ir objects using positions","code":""},{"path":"https://henningte.github.io/ir/reference/slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset rows in ir objects using their positions — slice","text":"","code":"slice.ir(.data, ..., .preserve = FALSE)  slice_sample.ir(.data, ..., n, prop, weight_by = NULL, replace = FALSE)"},{"path":"https://henningte.github.io/ir/reference/slice.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Subset rows in ir objects using their positions — slice","text":"dplyr::slice()","code":""},{"path":"https://henningte.github.io/ir/reference/slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset rows in ir objects using their positions — slice","text":".data object class ir. ... slice(): <data-masking> Integer row values. Provide either positive values keep, negative values drop. values provided must either positive negative. Indices beyond number rows input silently ignored. slice_helpers(), arguments passed methods. .preserve Relevant .data input grouped. .preserve = FALSE (default), grouping structure recalculated based resulting data, otherwise grouping kept . n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. negative value n prop provided, specified number proportion rows removed. n greater number rows group (prop > 1), result silently truncated group size. proportion group size yield integer number rows, absolute value prop*nrow(.data) rounded . weight_by Sampling weights. must evaluate vector non-negative numbers length input. Weights automatically standardised sum 1. replace sampling performed (TRUE) without (FALSE, default) replacement.","code":""},{"path":"https://henningte.github.io/ir/reference/slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset rows in ir objects using their positions — slice","text":".data subsetted rows.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/slice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset rows in ir objects using their positions — slice","text":"","code":"## slice dplyr::slice(ir_sample_data, 1:5) #> # A tibble: 5 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                                 [1] #> 1              1 GN 11-389 needles     Abies Firma Momi fir                0.360 #> 2              2 GN 11-400 needles     Cupressocyparis leylandii …         0.339 #> 3              3 GN 11-407 needles     Juniperus chinensis Chines…         0.268 #> 4              4 GN 11-411 needles     Metasequoia glyptostroboid…         0.350 #> 5              5 GN 11-416 needles     Pinus strobus Torulosa              0.331 #> # … with 2 more variables: holocellulose [1], spectra <named list> dplyr::slice_min(ir_sample_data, holocellulose, n = 3) #> # A tibble: 3 × 7 #>   id_measurement id_sample sample_type        sample_comment       klason_lignin #> *          <int> <chr>     <chr>              <chr>                          [1] #> 1              8 GN 11-423 needles            Taxodium distichum …         0.357 #> 2             32 LG 11-418 leaves and grasses Prunus incisa Fuji …         0.326 #> 3             33 LG 11-432 leaves and grasses Acer rubrum red map…         0.239 #> # … with 2 more variables: holocellulose [1], spectra <named list> dplyr::slice_max(ir_sample_data, holocellulose, n = 3) #> # A tibble: 3 × 7 #>   id_measurement id_sample  sample_type             sample_comment klason_lignin #> *          <int> <chr>      <chr>                   <chr>                    [1] #> 1             42 OCC 11-457 old corrugated cardboa… \"OCC 1\"                0.102 #> 2             43 OCC 11-462 old corrugated cardboa… \"OCC 3\"                0.142 #> 3             56 OFF 13-144 office paper            \"\"                     0.318 #> # … with 2 more variables: holocellulose [1], spectra <named list> dplyr::slice_head(ir_sample_data, n = 5) #> # A tibble: 5 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                                 [1] #> 1              1 GN 11-389 needles     Abies Firma Momi fir                0.360 #> 2              2 GN 11-400 needles     Cupressocyparis leylandii …         0.339 #> 3              3 GN 11-407 needles     Juniperus chinensis Chines…         0.268 #> 4              4 GN 11-411 needles     Metasequoia glyptostroboid…         0.350 #> 5              5 GN 11-416 needles     Pinus strobus Torulosa              0.331 #> # … with 2 more variables: holocellulose [1], spectra <named list> dplyr::slice_tail(ir_sample_data, n = 5) #> # A tibble: 5 × 7 #>   id_measurement id_sample  sample_type   sample_comment      klason_lignin #> *          <int> <chr>      <chr>         <chr>                         [1] #> 1             54 ONP 11-459 old newsprint \"Los Angeles Times\"        0.195  #> 2             55 OFF 10-506 office paper  \"\"                         0.204  #> 3             56 OFF 13-144 office paper  \"\"                         0.318  #> 4             57 OFF 08-80  office paper  \"\"                         0.562  #> 5             58 OFF 08-852 office paper  \"\"                         0.0542 #> # … with 2 more variables: holocellulose [1], spectra <named list>  ## slice_sample set.seed(234) dplyr::slice_sample(ir_sample_data, n = 3) #> # A tibble: 3 × 7 #>   id_measurement id_sample sample_type        sample_comment       klason_lignin #> *          <int> <chr>     <chr>              <chr>                          [1] #> 1             33 LG 11-432 leaves and grasses Acer rubrum red map…         0.239 #> 2             31 LG 11-414 leaves and grasses Nyssa sylvatica Bla…         0.219 #> 3             34 LG 11-433 leaves and grasses Cornus florida Flow…         0.181 #> # … with 2 more variables: holocellulose [1], spectra <named list>"},{"path":"https://henningte.github.io/ir/reference/subsetting.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting ir objects — subsetting","title":"Subsetting ir objects — subsetting","text":"Subsetting ir objects","code":""},{"path":"https://henningte.github.io/ir/reference/subsetting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting ir objects — subsetting","text":"","code":"# S3 method for ir [(x, i, j, ..., exact = TRUE)  # S3 method for ir $(x, i)  # S3 method for ir [[(x, i, j, ..., exact = TRUE)  # S3 method for ir $(x, i, j, ...) <- value  # S3 method for ir [(i, j, ..., exact = TRUE) <- value  # S3 method for ir [[(i, j, ..., exact = TRUE) <- value"},{"path":"https://henningte.github.io/ir/reference/subsetting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsetting ir objects — subsetting","text":"x object class ir. , j Row column indices. j omitted, used column index. ... Ignored. exact Ignored, warning. value value store row, column, range cell. Tibbles stricter data frames accepted .","code":""},{"path":"https://henningte.github.io/ir/reference/subsetting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsetting ir objects — subsetting","text":"subsetting operation preserves valid spectra column (see ir()), object class ir accordingly subsetted rows columns. Else tibble::tbl_df() vector.","code":""},{"path":"https://henningte.github.io/ir/reference/subsetting.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsetting ir objects — subsetting","text":"","code":"# subsetting rows ir_sample_data[1, ] #> # A tibble: 1 × 7 #>   id_measurement id_sample sample_type sample_comment       klason_lignin #> *          <int> <chr>     <chr>       <chr>                          [1] #> 1              1 GN 11-389 needles     Abies Firma Momi fir         0.360 #> # … with 2 more variables: holocellulose [1], spectra <named list> ir_sample_data[10:15, ] #> # A tibble: 6 × 7 #>   id_measurement id_sample sample_type sample_comment              klason_lignin #> *          <int> <chr>     <chr>       <chr>                                 [1] #> 1             10 GN 11-434 needles     Tsuga caroliniana Carolina…         0.289 #> 2             11 GN 11-435 needles     Picea abies Norway Spruce           0.288 #> 3             12 GN 11-460 needles     Pinus taeda Loblolly pine           0.322 #> 4             13 HW 07-151 hardwood    Quercus sp. Red oak (from …         0.238 #> 5             14 HW 11-137 hardwood    Acer saccharum Sugar maple          0.243 #> 6             15 HW 11-144 hardwood    Fraxinus americana White a…         0.259 #> # … with 2 more variables: holocellulose [1], spectra <named list> ir_sample_data[ir_sample_data$sample_type == \"office paper\", ] #> # A tibble: 4 × 7 #>   id_measurement id_sample  sample_type  sample_comment klason_lignin #> *          <int> <chr>      <chr>        <chr>                    [1] #> 1             55 OFF 10-506 office paper \"\"                    0.204  #> 2             56 OFF 13-144 office paper \"\"                    0.318  #> 3             57 OFF 08-80  office paper \"\"                    0.562  #> 4             58 OFF 08-852 office paper \"\"                    0.0542 #> # … with 2 more variables: holocellulose [1], spectra <named list>  # subsetting columns ir_sample_data[, \"spectra\"] #> # A tibble: 58 × 1 #>    spectra              #>  * <named list>         #>  1 <tibble [3,351 × 2]> #>  2 <tibble [3,351 × 2]> #>  3 <tibble [3,351 × 2]> #>  4 <tibble [3,351 × 2]> #>  5 <tibble [3,351 × 2]> #>  6 <tibble [3,351 × 2]> #>  7 <tibble [3,351 × 2]> #>  8 <tibble [3,351 × 2]> #>  9 <tibble [3,351 × 2]> #> 10 <tibble [3,351 × 2]> #> # … with 48 more rows ir_sample_data[[\"spectra\"]] #> $GN.11.389 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000361 #>  2  3999 0.000431 #>  3  3998 0.000501 #>  4  3997 0.000571 #>  5  3996 0.000667 #>  6  3995 0.000704 #>  7  3994 0.000612 #>  8  3993 0.000525 #>  9  3992 0.000502 #> 10  3991 0.000565 #> # … with 3,341 more rows #>  #> $GN.11.400 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000199 #>  2  3999 0.000379 #>  3  3998 0.000558 #>  4  3997 0.000738 #>  5  3996 0.000915 #>  6  3995 0.000987 #>  7  3994 0.000916 #>  8  3993 0.000767 #>  9  3992 0.000658 #> 10  3991 0.000596 #> # … with 3,341 more rows #>  #> $GN.11.407 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000104 #>  2  3999 0.000203 #>  3  3998 0.000320 #>  4  3997 0.000394 #>  5  3996 0.000408 #>  6  3995 0.000408 #>  7  3994 0.000452 #>  8  3993 0.000545 #>  9  3992 0.000632 #> 10  3991 0.000650 #> # … with 3,341 more rows #>  #> $GN.11.411 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000198 #>  2  3999 0.000231 #>  3  3998 0.000263 #>  4  3997 0.000295 #>  5  3996 0.000341 #>  6  3995 0.000368 #>  7  3994 0.000353 #>  8  3993 0.000297 #>  9  3992 0.000230 #> 10  3991 0.000186 #> # … with 3,341 more rows #>  #> $GN.11.416 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000192 #>  2  3999 0.000249 #>  3  3998 0.000277 #>  4  3997 0.000303 #>  5  3996 0.000343 #>  6  3995 0.000397 #>  7  3994 0.000438 #>  8  3993 0.000441 #>  9  3992 0.000405 #> 10  3991 0.000355 #> # … with 3,341 more rows #>  #> $GN.11.419 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000228 #>  2  3999 0.000284 #>  3  3998 0.000339 #>  4  3997 0.000394 #>  5  3996 0.000384 #>  6  3995 0.000338 #>  7  3994 0.000295 #>  8  3993 0.000276 #>  9  3992 0.000272 #> 10  3991 0.000267 #> # … with 3,341 more rows #>  #> $GN.11.422 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000871 #>  2  3999 0.000139  #>  3  3998 0.000223  #>  4  3997 0.000313  #>  5  3996 0.000375  #>  6  3995 0.000386  #>  7  3994 0.000341  #>  8  3993 0.000258  #>  9  3992 0.000163  #> 10  3991 0.0000836 #> # … with 3,341 more rows #>  #> $GN.11.423 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000236 #>  2  3999 0.000192 #>  3  3998 0.000147 #>  4  3997 0.000127 #>  5  3996 0.000116 #>  6  3995 0.000143 #>  7  3994 0.000185 #>  8  3993 0.000225 #>  9  3992 0.000242 #> 10  3991 0.000235 #> # … with 3,341 more rows #>  #> $GN.11.428 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000111 #>  2  3999 0.000141 #>  3  3998 0.000219 #>  4  3997 0.000323 #>  5  3996 0.000412 #>  6  3995 0.000448 #>  7  3994 0.000421 #>  8  3993 0.000353 #>  9  3992 0.000274 #> 10  3991 0.000205 #> # … with 3,341 more rows #>  #> $GN.11.434 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000449 #>  2  3999 0.000388 #>  3  3998 0.000325 #>  4  3997 0.000258 #>  5  3996 0.000226 #>  6  3995 0.000258 #>  7  3994 0.000348 #>  8  3993 0.000461 #>  9  3992 0.000516 #> 10  3991 0.000609 #> # … with 3,341 more rows #>  #> $GN.11.435 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000568 #>  2  3999 0.000154  #>  3  3998 0.000264  #>  4  3997 0.000352  #>  5  3996 0.000407  #>  6  3995 0.000446  #>  7  3994 0.000494  #>  8  3993 0.000546  #>  9  3992 0.000568  #> 10  3991 0.000524  #> # … with 3,341 more rows #>  #> $GN.11.460 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000385 #>  2  3999 0.000343 #>  3  3998 0.000298 #>  4  3997 0.000250 #>  5  3996 0.000176 #>  6  3995 0.000136 #>  7  3994 0.000143 #>  8  3993 0.000213 #>  9  3992 0.000298 #> 10  3991 0.000364 #> # … with 3,341 more rows #>  #> $HW.07.151 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000193  #>  2  3999 0.000214  #>  3  3998 0.000179  #>  4  3997 0.000106  #>  5  3996 0.0000386 #>  6  3995 0.0000354 #>  7  3994 0.000102  #>  8  3993 0.000210  #>  9  3992 0.000294  #> 10  3991 0.000312  #> # … with 3,341 more rows #>  #> $HW.11.137 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000163  #>  2  3999 0.000169  #>  3  3998 0.000142  #>  4  3997 0.0000846 #>  5  3996 0.0000446 #>  6  3995 0.0000695 #>  7  3994 0.000173  #>  8  3993 0.000312  #>  9  3992 0.000409  #> 10  3991 0.000405  #> # … with 3,341 more rows #>  #> $HW.11.144 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000876 #>  2  3999 0.000194  #>  3  3998 0.000269  #>  4  3997 0.000321  #>  5  3996 0.000342  #>  6  3995 0.000355  #>  7  3994 0.000357  #>  8  3993 0.000326  #>  9  3992 0.000246  #> 10  3991 0.000132  #> # … with 3,341 more rows #>  #> $HW.11.146 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000908 #>  2  3999 0.000201  #>  3  3998 0.000277  #>  4  3997 0.000297  #>  5  3996 0.000296  #>  6  3995 0.000287  #>  7  3994 0.000302  #>  8  3993 0.000327  #>  9  3992 0.000321  #> 10  3991 0.000261  #> # … with 3,341 more rows #>  #> $HW.11.148 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000196  #>  2  3999 0.000182  #>  3  3998 0.000146  #>  4  3997 0.0000904 #>  5  3996 0.0000709 #>  6  3995 0.000118  #>  7  3994 0.000211  #>  8  3993 0.000294  #>  9  3992 0.000316  #> 10  3991 0.000272  #> # … with 3,341 more rows #>  #> $HW.11.149 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000203  #>  2  3999 0.000254  #>  3  3998 0.000224  #>  4  3997 0.000141  #>  5  3996 0.0000606 #>  6  3995 0.0000288 #>  7  3994 0.000055  #>  8  3993 0.000112  #>  9  3992 0.000143  #> 10  3991 0.000129  #> # … with 3,341 more rows #>  #> $HW.11.172 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000164 #>  2  3999 0.000215 #>  3  3998 0.000240 #>  4  3997 0.000223 #>  5  3996 0.000193 #>  6  3995 0.000196 #>  7  3994 0.000248 #>  8  3993 0.000310 #>  9  3992 0.000321 #> 10  3991 0.000256 #> # … with 3,341 more rows #>  #> $HW.11.173 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000134  #>  2  3999 0.000210  #>  3  3998 0.000221  #>  4  3997 0.000155  #>  5  3996 0.0000658 #>  6  3995 0.0000434 #>  7  3994 0.0000766 #>  8  3993 0.000155  #>  9  3992 0.000213  #> 10  3991 0.000203  #> # … with 3,341 more rows #>  #> $HW.11.176 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000143  #>  2  3999 0.000150  #>  3  3998 0.000113  #>  4  3997 0.0000535 #>  5  3996 0.0000051 #>  6  3995 0         #>  7  3994 0.0000455 #>  8  3993 0.000117  #>  9  3992 0.000175  #> 10  3991 0.000195  #> # … with 3,341 more rows #>  #> $HW.11.179 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000197  #>  2  3999 0.000177  #>  3  3998 0.000140  #>  4  3997 0.000102  #>  5  3996 0.0000988 #>  6  3995 0.000157  #>  7  3994 0.000261  #>  8  3993 0.000360  #>  9  3992 0.000394  #> 10  3991 0.000340  #> # … with 3,341 more rows #>  #> $HW.11.184 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000136 #>  2  3999 0.000222 #>  3  3998 0.000274 #>  4  3997 0.000271 #>  5  3996 0.000209 #>  6  3995 0.000143 #>  7  3994 0.000119 #>  8  3993 0.000139 #>  9  3992 0.000166 #> 10  3991 0.000154 #> # … with 3,341 more rows #>  #> $LG.09.384 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000141 #>  2  3999 0.000105 #>  3  3998 0.000111 #>  4  3997 0.000146 #>  5  3996 0.000181 #>  6  3995 0.000204 #>  7  3994 0.000212 #>  8  3993 0.000207 #>  9  3992 0.000192 #> 10  3991 0.000180 #> # … with 3,341 more rows #>  #> $LG.11.309 #> # A tibble: 3,351 × 2 #>        x          y #>    <int>      <dbl> #>  1  4000 0.000167   #>  2  3999 0.000238   #>  3  3998 0.000270   #>  4  3997 0.000243   #>  5  3996 0.000178   #>  6  3995 0.0000299  #>  7  3994 0.00000686 #>  8  3993 0.0000312  #>  9  3992 0.0000693  #> 10  3991 0.0000924  #> # … with 3,341 more rows #>  #> $LG.11.393 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000608 #>  2  3999 0.000618 #>  3  3998 0.000655 #>  4  3997 0.000697 #>  5  3996 0.000732 #>  6  3995 0.000755 #>  7  3994 0.000762 #>  8  3993 0.000748 #>  9  3992 0.000720 #> 10  3991 0.000702 #> # … with 3,341 more rows #>  #> $LG.11.395 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000138 #>  2  3999 0.000274 #>  3  3998 0.000436 #>  4  3997 0.000569 #>  5  3996 0.000630 #>  6  3995 0.000625 #>  7  3994 0.000595 #>  8  3993 0.000574 #>  9  3992 0.000564 #> 10  3991 0.000553 #> # … with 3,341 more rows #>  #> $LG.11.397 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000229 #>  2  3999 0.000342 #>  3  3998 0.000404 #>  4  3997 0.000436 #>  5  3996 0.000462 #>  6  3995 0.000500 #>  7  3994 0.000539 #>  8  3993 0.000552 #>  9  3992 0.000531 #> 10  3991 0.000495 #> # … with 3,341 more rows #>  #> $LG.11.404 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000165 #>  2  3999 0.000256 #>  3  3998 0.000347 #>  4  3997 0.000369 #>  5  3996 0.000332 #>  6  3995 0.000275 #>  7  3994 0.000235 #>  8  3993 0.000221 #>  9  3992 0.000224 #> 10  3991 0.000234 #> # … with 3,341 more rows #>  #> $LG.11.412 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000087  #>  2  3999 0.000270  #>  3  3998 0.000231  #>  4  3997 0.000263  #>  5  3996 0.000222  #>  6  3995 0.000148  #>  7  3994 0.0000888 #>  8  3993 0.0000699 #>  9  3992 0.0000886 #> 10  3991 0.000130  #> # … with 3,341 more rows #>  #> $LG.11.414 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000105 #>  2  3999 0.000166 #>  3  3998 0.000203 #>  4  3997 0.000227 #>  5  3996 0.000251 #>  6  3995 0.000276 #>  7  3994 0.000284 #>  8  3993 0.000262 #>  9  3992 0.000219 #> 10  3991 0.000183 #> # … with 3,341 more rows #>  #> $LG.11.418 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000367 #>  2  3999 0.000355 #>  3  3998 0.000342 #>  4  3997 0.000295 #>  5  3996 0.000248 #>  6  3995 0.000233 #>  7  3994 0.000249 #>  8  3993 0.000269 #>  9  3992 0.000278 #> 10  3991 0.000288 #> # … with 3,341 more rows #>  #> $LG.11.432 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000238 #>  2  3999 0.000353 #>  3  3998 0.000443 #>  4  3997 0.000494 #>  5  3996 0.000510 #>  6  3995 0.000519 #>  7  3994 0.000535 #>  8  3993 0.000548 #>  9  3992 0.000544 #> 10  3991 0.000527 #> # … with 3,341 more rows #>  #> $LG.11.433 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000626 #>  2  3999 0.000638 #>  3  3998 0.000652 #>  4  3997 0.000510 #>  5  3996 0.000493 #>  6  3995 0.000505 #>  7  3994 0.000540 #>  8  3993 0.000577 #>  9  3992 0.000598 #> 10  3991 0.000601 #> # … with 3,341 more rows #>  #> $LG.11.438 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000477 #>  2  3999 0.000422 #>  3  3998 0.000390 #>  4  3997 0.000384 #>  5  3996 0.000383 #>  6  3995 0.000379 #>  7  3994 0.000383 #>  8  3993 0.000411 #>  9  3992 0.000462 #> 10  3991 0.000519 #> # … with 3,341 more rows #>  #> $LG.11.461 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000813 #>  2  3999 0.000152  #>  3  3998 0.000223  #>  4  3997 0.000276  #>  5  3996 0.000298  #>  6  3995 0.000297  #>  7  3994 0.000285  #>  8  3993 0.000272  #>  9  3992 0.000255  #> 10  3991 0.000238  #> # … with 3,341 more rows #>  #> $SW.11.138 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000125  #>  2  3999 0.000150  #>  3  3998 0.000128  #>  4  3997 0.0000665 #>  5  3996 0.0000404 #>  6  3995 0.0000627 #>  7  3994 0.000152  #>  8  3993 0.000253  #>  9  3992 0.000301  #> 10  3991 0.000267  #> # … with 3,341 more rows #>  #> $SW.11.139 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000183 #>  2  3999 0.000265 #>  3  3998 0.000290 #>  4  3997 0.000255 #>  5  3996 0.000192 #>  6  3995 0.000142 #>  7  3994 0.000152 #>  8  3993 0.000152 #>  9  3992 0.000139 #> 10  3991 0.000103 #> # … with 3,341 more rows #>  #> $SW.11.154 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000175 #>  2  3999 0.000258 #>  3  3998 0.000285 #>  4  3997 0.000250 #>  5  3996 0.000228 #>  6  3995 0.000214 #>  7  3994 0.000243 #>  8  3993 0.000270 #>  9  3992 0.000242 #> 10  3991 0.000155 #> # … with 3,341 more rows #>  #> $SW.11.158 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000156 #>  2  3999 0.000241 #>  3  3998 0.000254 #>  4  3997 0.000201 #>  5  3996 0.000139 #>  6  3995 0.000155 #>  7  3994 0.000204 #>  8  3993 0.000266 #>  9  3992 0.000276 #> 10  3991 0.000209 #> # … with 3,341 more rows #>  #> $SW.11.178 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000212 #>  2  3999 0.000234 #>  3  3998 0.000200 #>  4  3997 0.000141 #>  5  3996 0.000105 #>  6  3995 0.000128 #>  7  3994 0.000204 #>  8  3993 0.000284 #>  9  3992 0.000303 #> 10  3991 0.000235 #> # … with 3,341 more rows #>  #> $OCC.11.457 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000155 #>  2  3999 0.000189 #>  3  3998 0.000216 #>  4  3997 0.000236 #>  5  3996 0.000245 #>  6  3995 0.000255 #>  7  3994 0.000278 #>  8  3993 0.000313 #>  9  3992 0.000330 #> 10  3991 0.000293 #> # … with 3,341 more rows #>  #> $OCC.11.462 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000218  #>  2  3999 0.000210  #>  3  3998 0.000151  #>  4  3997 0.0000726 #>  5  3996 0.0000238 #>  6  3995 0.0000902 #>  7  3994 0.000158  #>  8  3993 0.000232  #>  9  3992 0.000261  #> 10  3991 0.000227  #> # … with 3,341 more rows #>  #> $OCC.11.463 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000111 #>  2  3999 0.000247 #>  3  3998 0.000328 #>  4  3997 0.000360 #>  5  3996 0.000317 #>  6  3995 0.000284 #>  7  3994 0.000296 #>  8  3993 0.000329 #>  9  3992 0.000318 #> 10  3991 0.000224 #> # … with 3,341 more rows #>  #> $OMG.08.82 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000227 #>  2  3999 0.000259 #>  3  3998 0.000301 #>  4  3997 0.000345 #>  5  3996 0.000403 #>  6  3995 0.000464 #>  7  3994 0.000505 #>  8  3993 0.000501 #>  9  3992 0.000456 #> 10  3991 0.000403 #> # … with 3,341 more rows #>  #> $OMG.11.454 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000224 #>  2  3999 0.000263 #>  3  3998 0.000254 #>  4  3997 0.000202 #>  5  3996 0.000140 #>  6  3995 0.000105 #>  7  3994 0.000117 #>  8  3993 0.000167 #>  9  3992 0.000237 #> 10  3991 0.000309 #> # … with 3,341 more rows #>  #> $OMG.11.455 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000248 #>  2  3999 0.000238 #>  3  3998 0.000227 #>  4  3997 0.000216 #>  5  3996 0.000204 #>  6  3995 0.000191 #>  7  3994 0.000153 #>  8  3993 0.000124 #>  9  3992 0.000138 #> 10  3991 0.000196 #> # … with 3,341 more rows #>  #> $OMG.11.456 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000300 #>  2  3999 0.000262 #>  3  3998 0.000222 #>  4  3997 0.000179 #>  5  3996 0.000160 #>  6  3995 0.000145 #>  7  3994 0.000125 #>  8  3993 0.000119 #>  9  3992 0.000160 #> 10  3991 0.000264 #> # … with 3,341 more rows #>  #> $ONP.08.78 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000215  #>  2  3999 0.000189  #>  3  3998 0.000149  #>  4  3997 0.000109  #>  5  3996 0.0000816 #>  6  3995 0.0000732 #>  7  3994 0.000083  #>  8  3993 0.000106  #>  9  3992 0.000138  #> 10  3991 0.000182  #> # … with 3,341 more rows #>  #> $ONP.09.388 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000260 #>  2  3999 0.000193 #>  3  3998 0.000137 #>  4  3997 0.000118 #>  5  3996 0.000137 #>  6  3995 0.000174 #>  7  3994 0.000211 #>  8  3993 0.000239 #>  9  3992 0.000267 #> 10  3991 0.000311 #> # … with 3,341 more rows #>  #> $ONP.11.450 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000255 #>  2  3999 0.000261 #>  3  3998 0.000268 #>  4  3997 0.000274 #>  5  3996 0.000316 #>  6  3995 0.000350 #>  7  3994 0.000349 #>  8  3993 0.000328 #>  9  3992 0.000330 #> 10  3991 0.000389 #> # … with 3,341 more rows #>  #> $ONP.11.451 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000244 #>  2  3999 0.000244 #>  3  3998 0.000244 #>  4  3997 0.000243 #>  5  3996 0.000261 #>  6  3995 0.000277 #>  7  3994 0.000277 #>  8  3993 0.000263 #>  9  3992 0.000255 #> 10  3991 0.000271 #> # … with 3,341 more rows #>  #> $ONP.11.458 #> # A tibble: 3,351 × 2 #>        x          y #>    <int>      <dbl> #>  1  4000 0.000129   #>  2  3999 0.0000484  #>  3  3998 0          #>  4  3997 0.00000254 #>  5  3996 0.0000362  #>  6  3995 0.0000648  #>  7  3994 0.0000706  #>  8  3993 0.0000684  #>  9  3992 0.0000893  #> 10  3991 0.000152   #> # … with 3,341 more rows #>  #> $ONP.11.459 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000235  #>  2  3999 0.000217  #>  3  3998 0.000198  #>  4  3997 0.000177  #>  5  3996 0.000154  #>  6  3995 0.000122  #>  7  3994 0.0000991 #>  8  3993 0.000110  #>  9  3992 0.000164  #> 10  3991 0.000249  #> # … with 3,341 more rows #>  #> $OFF.10.506 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000281 #>  2  3999 0.000313 #>  3  3998 0.000283 #>  4  3997 0.000213 #>  5  3996 0.000153 #>  6  3995 0.000147 #>  7  3994 0.000199 #>  8  3993 0.000265 #>  9  3992 0.000292 #> 10  3991 0.000255 #> # … with 3,341 more rows #>  #> $OFF.13.144 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000118 #>  2  3999 0.000253 #>  3  3998 0.000338 #>  4  3997 0.000337 #>  5  3996 0.000280 #>  6  3995 0.000222 #>  7  3994 0.000231 #>  8  3993 0.000219 #>  9  3992 0.000183 #> 10  3991 0.000116 #> # … with 3,341 more rows #>  #> $OFF.08.80 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000170 #>  2  3999 0.000212 #>  3  3998 0.000194 #>  4  3997 0.000135 #>  5  3996 0.000124 #>  6  3995 0.000159 #>  7  3994 0.000256 #>  8  3993 0.000352 #>  9  3992 0.000379 #> 10  3991 0.000314 #> # … with 3,341 more rows #>  #> $OFF.08.852 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000108 #>  2  3999 0.000186 #>  3  3998 0.000209 #>  4  3997 0.000177 #>  5  3996 0.000136 #>  6  3995 0.000177 #>  7  3994 0.000231 #>  8  3993 0.000303 #>  9  3992 0.000338 #> 10  3991 0.000304 #> # … with 3,341 more rows #>  #> attr(,\"class\") #> [1] \"list\" ir_sample_data$spectra #> $GN.11.389 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000361 #>  2  3999 0.000431 #>  3  3998 0.000501 #>  4  3997 0.000571 #>  5  3996 0.000667 #>  6  3995 0.000704 #>  7  3994 0.000612 #>  8  3993 0.000525 #>  9  3992 0.000502 #> 10  3991 0.000565 #> # … with 3,341 more rows #>  #> $GN.11.400 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000199 #>  2  3999 0.000379 #>  3  3998 0.000558 #>  4  3997 0.000738 #>  5  3996 0.000915 #>  6  3995 0.000987 #>  7  3994 0.000916 #>  8  3993 0.000767 #>  9  3992 0.000658 #> 10  3991 0.000596 #> # … with 3,341 more rows #>  #> $GN.11.407 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000104 #>  2  3999 0.000203 #>  3  3998 0.000320 #>  4  3997 0.000394 #>  5  3996 0.000408 #>  6  3995 0.000408 #>  7  3994 0.000452 #>  8  3993 0.000545 #>  9  3992 0.000632 #> 10  3991 0.000650 #> # … with 3,341 more rows #>  #> $GN.11.411 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000198 #>  2  3999 0.000231 #>  3  3998 0.000263 #>  4  3997 0.000295 #>  5  3996 0.000341 #>  6  3995 0.000368 #>  7  3994 0.000353 #>  8  3993 0.000297 #>  9  3992 0.000230 #> 10  3991 0.000186 #> # … with 3,341 more rows #>  #> $GN.11.416 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000192 #>  2  3999 0.000249 #>  3  3998 0.000277 #>  4  3997 0.000303 #>  5  3996 0.000343 #>  6  3995 0.000397 #>  7  3994 0.000438 #>  8  3993 0.000441 #>  9  3992 0.000405 #> 10  3991 0.000355 #> # … with 3,341 more rows #>  #> $GN.11.419 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000228 #>  2  3999 0.000284 #>  3  3998 0.000339 #>  4  3997 0.000394 #>  5  3996 0.000384 #>  6  3995 0.000338 #>  7  3994 0.000295 #>  8  3993 0.000276 #>  9  3992 0.000272 #> 10  3991 0.000267 #> # … with 3,341 more rows #>  #> $GN.11.422 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000871 #>  2  3999 0.000139  #>  3  3998 0.000223  #>  4  3997 0.000313  #>  5  3996 0.000375  #>  6  3995 0.000386  #>  7  3994 0.000341  #>  8  3993 0.000258  #>  9  3992 0.000163  #> 10  3991 0.0000836 #> # … with 3,341 more rows #>  #> $GN.11.423 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000236 #>  2  3999 0.000192 #>  3  3998 0.000147 #>  4  3997 0.000127 #>  5  3996 0.000116 #>  6  3995 0.000143 #>  7  3994 0.000185 #>  8  3993 0.000225 #>  9  3992 0.000242 #> 10  3991 0.000235 #> # … with 3,341 more rows #>  #> $GN.11.428 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000111 #>  2  3999 0.000141 #>  3  3998 0.000219 #>  4  3997 0.000323 #>  5  3996 0.000412 #>  6  3995 0.000448 #>  7  3994 0.000421 #>  8  3993 0.000353 #>  9  3992 0.000274 #> 10  3991 0.000205 #> # … with 3,341 more rows #>  #> $GN.11.434 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000449 #>  2  3999 0.000388 #>  3  3998 0.000325 #>  4  3997 0.000258 #>  5  3996 0.000226 #>  6  3995 0.000258 #>  7  3994 0.000348 #>  8  3993 0.000461 #>  9  3992 0.000516 #> 10  3991 0.000609 #> # … with 3,341 more rows #>  #> $GN.11.435 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000568 #>  2  3999 0.000154  #>  3  3998 0.000264  #>  4  3997 0.000352  #>  5  3996 0.000407  #>  6  3995 0.000446  #>  7  3994 0.000494  #>  8  3993 0.000546  #>  9  3992 0.000568  #> 10  3991 0.000524  #> # … with 3,341 more rows #>  #> $GN.11.460 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000385 #>  2  3999 0.000343 #>  3  3998 0.000298 #>  4  3997 0.000250 #>  5  3996 0.000176 #>  6  3995 0.000136 #>  7  3994 0.000143 #>  8  3993 0.000213 #>  9  3992 0.000298 #> 10  3991 0.000364 #> # … with 3,341 more rows #>  #> $HW.07.151 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000193  #>  2  3999 0.000214  #>  3  3998 0.000179  #>  4  3997 0.000106  #>  5  3996 0.0000386 #>  6  3995 0.0000354 #>  7  3994 0.000102  #>  8  3993 0.000210  #>  9  3992 0.000294  #> 10  3991 0.000312  #> # … with 3,341 more rows #>  #> $HW.11.137 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000163  #>  2  3999 0.000169  #>  3  3998 0.000142  #>  4  3997 0.0000846 #>  5  3996 0.0000446 #>  6  3995 0.0000695 #>  7  3994 0.000173  #>  8  3993 0.000312  #>  9  3992 0.000409  #> 10  3991 0.000405  #> # … with 3,341 more rows #>  #> $HW.11.144 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000876 #>  2  3999 0.000194  #>  3  3998 0.000269  #>  4  3997 0.000321  #>  5  3996 0.000342  #>  6  3995 0.000355  #>  7  3994 0.000357  #>  8  3993 0.000326  #>  9  3992 0.000246  #> 10  3991 0.000132  #> # … with 3,341 more rows #>  #> $HW.11.146 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000908 #>  2  3999 0.000201  #>  3  3998 0.000277  #>  4  3997 0.000297  #>  5  3996 0.000296  #>  6  3995 0.000287  #>  7  3994 0.000302  #>  8  3993 0.000327  #>  9  3992 0.000321  #> 10  3991 0.000261  #> # … with 3,341 more rows #>  #> $HW.11.148 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000196  #>  2  3999 0.000182  #>  3  3998 0.000146  #>  4  3997 0.0000904 #>  5  3996 0.0000709 #>  6  3995 0.000118  #>  7  3994 0.000211  #>  8  3993 0.000294  #>  9  3992 0.000316  #> 10  3991 0.000272  #> # … with 3,341 more rows #>  #> $HW.11.149 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000203  #>  2  3999 0.000254  #>  3  3998 0.000224  #>  4  3997 0.000141  #>  5  3996 0.0000606 #>  6  3995 0.0000288 #>  7  3994 0.000055  #>  8  3993 0.000112  #>  9  3992 0.000143  #> 10  3991 0.000129  #> # … with 3,341 more rows #>  #> $HW.11.172 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000164 #>  2  3999 0.000215 #>  3  3998 0.000240 #>  4  3997 0.000223 #>  5  3996 0.000193 #>  6  3995 0.000196 #>  7  3994 0.000248 #>  8  3993 0.000310 #>  9  3992 0.000321 #> 10  3991 0.000256 #> # … with 3,341 more rows #>  #> $HW.11.173 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000134  #>  2  3999 0.000210  #>  3  3998 0.000221  #>  4  3997 0.000155  #>  5  3996 0.0000658 #>  6  3995 0.0000434 #>  7  3994 0.0000766 #>  8  3993 0.000155  #>  9  3992 0.000213  #> 10  3991 0.000203  #> # … with 3,341 more rows #>  #> $HW.11.176 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000143  #>  2  3999 0.000150  #>  3  3998 0.000113  #>  4  3997 0.0000535 #>  5  3996 0.0000051 #>  6  3995 0         #>  7  3994 0.0000455 #>  8  3993 0.000117  #>  9  3992 0.000175  #> 10  3991 0.000195  #> # … with 3,341 more rows #>  #> $HW.11.179 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000197  #>  2  3999 0.000177  #>  3  3998 0.000140  #>  4  3997 0.000102  #>  5  3996 0.0000988 #>  6  3995 0.000157  #>  7  3994 0.000261  #>  8  3993 0.000360  #>  9  3992 0.000394  #> 10  3991 0.000340  #> # … with 3,341 more rows #>  #> $HW.11.184 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000136 #>  2  3999 0.000222 #>  3  3998 0.000274 #>  4  3997 0.000271 #>  5  3996 0.000209 #>  6  3995 0.000143 #>  7  3994 0.000119 #>  8  3993 0.000139 #>  9  3992 0.000166 #> 10  3991 0.000154 #> # … with 3,341 more rows #>  #> $LG.09.384 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000141 #>  2  3999 0.000105 #>  3  3998 0.000111 #>  4  3997 0.000146 #>  5  3996 0.000181 #>  6  3995 0.000204 #>  7  3994 0.000212 #>  8  3993 0.000207 #>  9  3992 0.000192 #> 10  3991 0.000180 #> # … with 3,341 more rows #>  #> $LG.11.309 #> # A tibble: 3,351 × 2 #>        x          y #>    <int>      <dbl> #>  1  4000 0.000167   #>  2  3999 0.000238   #>  3  3998 0.000270   #>  4  3997 0.000243   #>  5  3996 0.000178   #>  6  3995 0.0000299  #>  7  3994 0.00000686 #>  8  3993 0.0000312  #>  9  3992 0.0000693  #> 10  3991 0.0000924  #> # … with 3,341 more rows #>  #> $LG.11.393 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000608 #>  2  3999 0.000618 #>  3  3998 0.000655 #>  4  3997 0.000697 #>  5  3996 0.000732 #>  6  3995 0.000755 #>  7  3994 0.000762 #>  8  3993 0.000748 #>  9  3992 0.000720 #> 10  3991 0.000702 #> # … with 3,341 more rows #>  #> $LG.11.395 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000138 #>  2  3999 0.000274 #>  3  3998 0.000436 #>  4  3997 0.000569 #>  5  3996 0.000630 #>  6  3995 0.000625 #>  7  3994 0.000595 #>  8  3993 0.000574 #>  9  3992 0.000564 #> 10  3991 0.000553 #> # … with 3,341 more rows #>  #> $LG.11.397 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000229 #>  2  3999 0.000342 #>  3  3998 0.000404 #>  4  3997 0.000436 #>  5  3996 0.000462 #>  6  3995 0.000500 #>  7  3994 0.000539 #>  8  3993 0.000552 #>  9  3992 0.000531 #> 10  3991 0.000495 #> # … with 3,341 more rows #>  #> $LG.11.404 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000165 #>  2  3999 0.000256 #>  3  3998 0.000347 #>  4  3997 0.000369 #>  5  3996 0.000332 #>  6  3995 0.000275 #>  7  3994 0.000235 #>  8  3993 0.000221 #>  9  3992 0.000224 #> 10  3991 0.000234 #> # … with 3,341 more rows #>  #> $LG.11.412 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000087  #>  2  3999 0.000270  #>  3  3998 0.000231  #>  4  3997 0.000263  #>  5  3996 0.000222  #>  6  3995 0.000148  #>  7  3994 0.0000888 #>  8  3993 0.0000699 #>  9  3992 0.0000886 #> 10  3991 0.000130  #> # … with 3,341 more rows #>  #> $LG.11.414 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000105 #>  2  3999 0.000166 #>  3  3998 0.000203 #>  4  3997 0.000227 #>  5  3996 0.000251 #>  6  3995 0.000276 #>  7  3994 0.000284 #>  8  3993 0.000262 #>  9  3992 0.000219 #> 10  3991 0.000183 #> # … with 3,341 more rows #>  #> $LG.11.418 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000367 #>  2  3999 0.000355 #>  3  3998 0.000342 #>  4  3997 0.000295 #>  5  3996 0.000248 #>  6  3995 0.000233 #>  7  3994 0.000249 #>  8  3993 0.000269 #>  9  3992 0.000278 #> 10  3991 0.000288 #> # … with 3,341 more rows #>  #> $LG.11.432 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000238 #>  2  3999 0.000353 #>  3  3998 0.000443 #>  4  3997 0.000494 #>  5  3996 0.000510 #>  6  3995 0.000519 #>  7  3994 0.000535 #>  8  3993 0.000548 #>  9  3992 0.000544 #> 10  3991 0.000527 #> # … with 3,341 more rows #>  #> $LG.11.433 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000626 #>  2  3999 0.000638 #>  3  3998 0.000652 #>  4  3997 0.000510 #>  5  3996 0.000493 #>  6  3995 0.000505 #>  7  3994 0.000540 #>  8  3993 0.000577 #>  9  3992 0.000598 #> 10  3991 0.000601 #> # … with 3,341 more rows #>  #> $LG.11.438 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000477 #>  2  3999 0.000422 #>  3  3998 0.000390 #>  4  3997 0.000384 #>  5  3996 0.000383 #>  6  3995 0.000379 #>  7  3994 0.000383 #>  8  3993 0.000411 #>  9  3992 0.000462 #> 10  3991 0.000519 #> # … with 3,341 more rows #>  #> $LG.11.461 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.0000813 #>  2  3999 0.000152  #>  3  3998 0.000223  #>  4  3997 0.000276  #>  5  3996 0.000298  #>  6  3995 0.000297  #>  7  3994 0.000285  #>  8  3993 0.000272  #>  9  3992 0.000255  #> 10  3991 0.000238  #> # … with 3,341 more rows #>  #> $SW.11.138 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000125  #>  2  3999 0.000150  #>  3  3998 0.000128  #>  4  3997 0.0000665 #>  5  3996 0.0000404 #>  6  3995 0.0000627 #>  7  3994 0.000152  #>  8  3993 0.000253  #>  9  3992 0.000301  #> 10  3991 0.000267  #> # … with 3,341 more rows #>  #> $SW.11.139 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000183 #>  2  3999 0.000265 #>  3  3998 0.000290 #>  4  3997 0.000255 #>  5  3996 0.000192 #>  6  3995 0.000142 #>  7  3994 0.000152 #>  8  3993 0.000152 #>  9  3992 0.000139 #> 10  3991 0.000103 #> # … with 3,341 more rows #>  #> $SW.11.154 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000175 #>  2  3999 0.000258 #>  3  3998 0.000285 #>  4  3997 0.000250 #>  5  3996 0.000228 #>  6  3995 0.000214 #>  7  3994 0.000243 #>  8  3993 0.000270 #>  9  3992 0.000242 #> 10  3991 0.000155 #> # … with 3,341 more rows #>  #> $SW.11.158 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000156 #>  2  3999 0.000241 #>  3  3998 0.000254 #>  4  3997 0.000201 #>  5  3996 0.000139 #>  6  3995 0.000155 #>  7  3994 0.000204 #>  8  3993 0.000266 #>  9  3992 0.000276 #> 10  3991 0.000209 #> # … with 3,341 more rows #>  #> $SW.11.178 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000212 #>  2  3999 0.000234 #>  3  3998 0.000200 #>  4  3997 0.000141 #>  5  3996 0.000105 #>  6  3995 0.000128 #>  7  3994 0.000204 #>  8  3993 0.000284 #>  9  3992 0.000303 #> 10  3991 0.000235 #> # … with 3,341 more rows #>  #> $OCC.11.457 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000155 #>  2  3999 0.000189 #>  3  3998 0.000216 #>  4  3997 0.000236 #>  5  3996 0.000245 #>  6  3995 0.000255 #>  7  3994 0.000278 #>  8  3993 0.000313 #>  9  3992 0.000330 #> 10  3991 0.000293 #> # … with 3,341 more rows #>  #> $OCC.11.462 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000218  #>  2  3999 0.000210  #>  3  3998 0.000151  #>  4  3997 0.0000726 #>  5  3996 0.0000238 #>  6  3995 0.0000902 #>  7  3994 0.000158  #>  8  3993 0.000232  #>  9  3992 0.000261  #> 10  3991 0.000227  #> # … with 3,341 more rows #>  #> $OCC.11.463 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000111 #>  2  3999 0.000247 #>  3  3998 0.000328 #>  4  3997 0.000360 #>  5  3996 0.000317 #>  6  3995 0.000284 #>  7  3994 0.000296 #>  8  3993 0.000329 #>  9  3992 0.000318 #> 10  3991 0.000224 #> # … with 3,341 more rows #>  #> $OMG.08.82 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000227 #>  2  3999 0.000259 #>  3  3998 0.000301 #>  4  3997 0.000345 #>  5  3996 0.000403 #>  6  3995 0.000464 #>  7  3994 0.000505 #>  8  3993 0.000501 #>  9  3992 0.000456 #> 10  3991 0.000403 #> # … with 3,341 more rows #>  #> $OMG.11.454 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000224 #>  2  3999 0.000263 #>  3  3998 0.000254 #>  4  3997 0.000202 #>  5  3996 0.000140 #>  6  3995 0.000105 #>  7  3994 0.000117 #>  8  3993 0.000167 #>  9  3992 0.000237 #> 10  3991 0.000309 #> # … with 3,341 more rows #>  #> $OMG.11.455 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000248 #>  2  3999 0.000238 #>  3  3998 0.000227 #>  4  3997 0.000216 #>  5  3996 0.000204 #>  6  3995 0.000191 #>  7  3994 0.000153 #>  8  3993 0.000124 #>  9  3992 0.000138 #> 10  3991 0.000196 #> # … with 3,341 more rows #>  #> $OMG.11.456 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000300 #>  2  3999 0.000262 #>  3  3998 0.000222 #>  4  3997 0.000179 #>  5  3996 0.000160 #>  6  3995 0.000145 #>  7  3994 0.000125 #>  8  3993 0.000119 #>  9  3992 0.000160 #> 10  3991 0.000264 #> # … with 3,341 more rows #>  #> $ONP.08.78 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000215  #>  2  3999 0.000189  #>  3  3998 0.000149  #>  4  3997 0.000109  #>  5  3996 0.0000816 #>  6  3995 0.0000732 #>  7  3994 0.000083  #>  8  3993 0.000106  #>  9  3992 0.000138  #> 10  3991 0.000182  #> # … with 3,341 more rows #>  #> $ONP.09.388 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000260 #>  2  3999 0.000193 #>  3  3998 0.000137 #>  4  3997 0.000118 #>  5  3996 0.000137 #>  6  3995 0.000174 #>  7  3994 0.000211 #>  8  3993 0.000239 #>  9  3992 0.000267 #> 10  3991 0.000311 #> # … with 3,341 more rows #>  #> $ONP.11.450 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000255 #>  2  3999 0.000261 #>  3  3998 0.000268 #>  4  3997 0.000274 #>  5  3996 0.000316 #>  6  3995 0.000350 #>  7  3994 0.000349 #>  8  3993 0.000328 #>  9  3992 0.000330 #> 10  3991 0.000389 #> # … with 3,341 more rows #>  #> $ONP.11.451 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000244 #>  2  3999 0.000244 #>  3  3998 0.000244 #>  4  3997 0.000243 #>  5  3996 0.000261 #>  6  3995 0.000277 #>  7  3994 0.000277 #>  8  3993 0.000263 #>  9  3992 0.000255 #> 10  3991 0.000271 #> # … with 3,341 more rows #>  #> $ONP.11.458 #> # A tibble: 3,351 × 2 #>        x          y #>    <int>      <dbl> #>  1  4000 0.000129   #>  2  3999 0.0000484  #>  3  3998 0          #>  4  3997 0.00000254 #>  5  3996 0.0000362  #>  6  3995 0.0000648  #>  7  3994 0.0000706  #>  8  3993 0.0000684  #>  9  3992 0.0000893  #> 10  3991 0.000152   #> # … with 3,341 more rows #>  #> $ONP.11.459 #> # A tibble: 3,351 × 2 #>        x         y #>    <int>     <dbl> #>  1  4000 0.000235  #>  2  3999 0.000217  #>  3  3998 0.000198  #>  4  3997 0.000177  #>  5  3996 0.000154  #>  6  3995 0.000122  #>  7  3994 0.0000991 #>  8  3993 0.000110  #>  9  3992 0.000164  #> 10  3991 0.000249  #> # … with 3,341 more rows #>  #> $OFF.10.506 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000281 #>  2  3999 0.000313 #>  3  3998 0.000283 #>  4  3997 0.000213 #>  5  3996 0.000153 #>  6  3995 0.000147 #>  7  3994 0.000199 #>  8  3993 0.000265 #>  9  3992 0.000292 #> 10  3991 0.000255 #> # … with 3,341 more rows #>  #> $OFF.13.144 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000118 #>  2  3999 0.000253 #>  3  3998 0.000338 #>  4  3997 0.000337 #>  5  3996 0.000280 #>  6  3995 0.000222 #>  7  3994 0.000231 #>  8  3993 0.000219 #>  9  3992 0.000183 #> 10  3991 0.000116 #> # … with 3,341 more rows #>  #> $OFF.08.80 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000170 #>  2  3999 0.000212 #>  3  3998 0.000194 #>  4  3997 0.000135 #>  5  3996 0.000124 #>  6  3995 0.000159 #>  7  3994 0.000256 #>  8  3993 0.000352 #>  9  3992 0.000379 #> 10  3991 0.000314 #> # … with 3,341 more rows #>  #> $OFF.08.852 #> # A tibble: 3,351 × 2 #>        x        y #>    <int>    <dbl> #>  1  4000 0.000108 #>  2  3999 0.000186 #>  3  3998 0.000209 #>  4  3997 0.000177 #>  5  3996 0.000136 #>  6  3995 0.000177 #>  7  3994 0.000231 #>  8  3993 0.000303 #>  9  3992 0.000338 #> 10  3991 0.000304 #> # … with 3,341 more rows #>  #> attr(,\"class\") #> [1] \"list\"  # not explicitly selecting the spectra column drops the ir class class(ir_sample_data[, 1]) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\" class(ir_sample_data[, \"spectra\"]) #> [1] \"ir\"         \"tbl_df\"     \"tbl\"        \"data.frame\"  # subsetting values ir_sample_data[, 1] # drops the ir class #> # A tibble: 58 × 1 #>    id_measurement #>  *          <int> #>  1              1 #>  2              2 #>  3              3 #>  4              4 #>  5              5 #>  6              6 #>  7              7 #>  8              8 #>  9              9 #> 10             10 #> # … with 48 more rows ir_sample_data[, c(\"id_sample\", \"spectra\")] #> # A tibble: 58 × 2 #>    id_sample spectra              #>  * <chr>     <named list>         #>  1 GN 11-389 <tibble [3,351 × 2]> #>  2 GN 11-400 <tibble [3,351 × 2]> #>  3 GN 11-407 <tibble [3,351 × 2]> #>  4 GN 11-411 <tibble [3,351 × 2]> #>  5 GN 11-416 <tibble [3,351 × 2]> #>  6 GN 11-419 <tibble [3,351 × 2]> #>  7 GN 11-422 <tibble [3,351 × 2]> #>  8 GN 11-423 <tibble [3,351 × 2]> #>  9 GN 11-428 <tibble [3,351 × 2]> #> 10 GN 11-434 <tibble [3,351 × 2]> #> # … with 48 more rows ir_sample_data$id_sample #>  [1] \"GN 11-389\"  \"GN 11-400\"  \"GN 11-407\"  \"GN 11-411\"  \"GN 11-416\"  #>  [6] \"GN 11-419\"  \"GN 11-422\"  \"GN 11-423\"  \"GN 11-428\"  \"GN 11-434\"  #> [11] \"GN 11-435\"  \"GN 11-460\"  \"HW 07-151\"  \"HW 11-137\"  \"HW 11-144\"  #> [16] \"HW 11-146\"  \"HW 11-148\"  \"HW 11-149\"  \"HW 11-172\"  \"HW 11-173\"  #> [21] \"HW 11-176\"  \"HW 11-179\"  \"HW 11-184\"  \"LG 09-384\"  \"LG 11-309\"  #> [26] \"LG 11-393\"  \"LG 11-395\"  \"LG 11-397\"  \"LG 11-404\"  \"LG 11-412\"  #> [31] \"LG 11-414\"  \"LG 11-418\"  \"LG 11-432\"  \"LG 11-433\"  \"LG 11-438\"  #> [36] \"LG 11-461\"  \"SW 11-138\"  \"SW 11-139\"  \"SW 11-154\"  \"SW 11-158\"  #> [41] \"SW 11-178\"  \"OCC 11-457\" \"OCC 11-462\" \"OCC 11-463\" \"OMG 08-82\"  #> [46] \"OMG 11-454\" \"OMG 11-455\" \"OMG 11-456\" \"ONP 08-78\"  \"ONP 09-388\" #> [51] \"ONP 11-450\" \"ONP 11-451\" \"ONP 11-458\" \"ONP 11-459\" \"OFF 10-506\" #> [56] \"OFF 13-144\" \"OFF 08-80\"  \"OFF 08-852\" #> attr(,\"class\") #> [1] \"character\" ir_sample_data[[1, 1]] #> [1] 1 #> attr(,\"class\") #> [1] \"integer\"  # setting and replacing columns x <- ir::ir_sample_data x$a <- 3 x[, \"a\"] <- 4 x$sample_type <- \"a\" x[[1]] <- rev(x[[1]])  # deleting the spectra column drops the ir class x$spectra <- NULL class(x) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\"  # setting and replacing rows x <- ir::ir_sample_data x[1, ] <- x[2, ] class(x) #> [1] \"ir\"         \"tbl_df\"     \"tbl\"        \"data.frame\"  # setting invalid values in the spectra column drops the ir class x_replacement <- x[1, ] x_replacement$spectra <- list(1) x[1, ] <- x_replacement class(x) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\"  # setting and replacing values x <- ir::ir_sample_data x[[1, 1]] <- 100  # replacing an element in the spectra column by an invalid element drops the # ir class attribute x[[3, \"spectra\"]] <- list(1) class(x) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\""},{"path":"https://henningte.github.io/ir/reference/summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize each group in a ir object to fewer rows — summarize","title":"Summarize each group in a ir object to fewer rows — summarize","text":"Summarize group ir object fewer rows","code":""},{"path":"https://henningte.github.io/ir/reference/summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize each group in a ir object to fewer rows — summarize","text":"","code":"summarize.ir(.data, ..., .groups = NULL)  summarise.ir(.data, ..., .groups = NULL)"},{"path":"https://henningte.github.io/ir/reference/summarize.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summarize each group in a ir object to fewer rows — summarize","text":"dplyr::summarize()","code":""},{"path":"https://henningte.github.io/ir/reference/summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize each group in a ir object to fewer rows — summarize","text":".data object class ir. ... <data-masking> Name-value pairs summary functions. name name variable result. value can : vector length 1, e.g. min(x), n(), sum(.na(y)). vector length n, e.g. quantile(). data frame, add multiple columns single expression. .groups Grouping structure result. \"drop_last\": dropping last level grouping. supported option version 1.0.0. \"drop\": levels grouping dropped. \"keep\": grouping structure .data. \"rowwise\": row group. .groups specified, chosen based number rows results: results 1 row, get \"drop_last\". number rows varies, get \"keep\". addition, message informs choice, unless result ungrouped, option \"dplyr.summarise.inform\" set FALSE, summarise() called function package.","code":""},{"path":"https://henningte.github.io/ir/reference/summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize each group in a ir object to fewer rows — summarize","text":".data summarized columns. spectra column dropped invalidated (see ir_new_ir()), ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/summarize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize each group in a ir object to fewer rows — summarize","text":"","code":"## summarize  # select in each sample_type groups the first spectrum ir_sample_data %>%   dplyr::group_by(sample_type) %>%   dplyr::summarize(spectra = spectra[[1]]) #> `summarise()` has grouped output by 'sample_type'. You can override using the #> `.groups` argument. #> # A tibble: 26,808 × 2 #> # Groups:   sample_type [8] #>    sample_type spectra$x        $y #>  * <chr>           <int>     <dbl> #>  1 hardwood         4000 0.000193  #>  2 hardwood         3999 0.000214  #>  3 hardwood         3998 0.000179  #>  4 hardwood         3997 0.000106  #>  5 hardwood         3996 0.0000386 #>  6 hardwood         3995 0.0000354 #>  7 hardwood         3994 0.000102  #>  8 hardwood         3993 0.000210  #>  9 hardwood         3992 0.000294  #> 10 hardwood         3991 0.000312  #> # … with 26,798 more rows"},{"path":"https://henningte.github.io/ir/reference/unite.ir.html","id":null,"dir":"Reference","previous_headings":"","what":"Unite multiple columns in an ir object into one by pasting strings together — unite.ir","title":"Unite multiple columns in an ir object into one by pasting strings together — unite.ir","text":"Unite multiple columns ir object one pasting strings together","code":""},{"path":"https://henningte.github.io/ir/reference/unite.ir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unite multiple columns in an ir object into one by pasting strings together — unite.ir","text":"","code":"unite.ir(data, col, ..., sep = \"_\", remove = TRUE, na.rm = FALSE)"},{"path":"https://henningte.github.io/ir/reference/unite.ir.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Unite multiple columns in an ir object into one by pasting strings together — unite.ir","text":"tidyr::unite()","code":""},{"path":"https://henningte.github.io/ir/reference/unite.ir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unite multiple columns in an ir object into one by pasting strings together — unite.ir","text":"data object class ir. col name new column, string symbol. argument passed expression supports quasiquotation (can unquote strings symbols). name captured expression rlang::ensym() (note kind interface symbols represent actual objects now discouraged tidyverse; support backward compatibility). ... <tidy-select> Columns unite sep Separator use values. remove TRUE, remove input columns output data frame. na.rm TRUE, missing values remove prior uniting value.","code":""},{"path":"https://henningte.github.io/ir/reference/unite.ir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unite multiple columns in an ir object into one by pasting strings together — unite.ir","text":".data united columns. spectra column dropped invalidated (see ir_new_ir()), ir class dropped, else object class ir.","code":""},{"path":[]},{"path":"https://henningte.github.io/ir/reference/unite.ir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unite multiple columns in an ir object into one by pasting strings together — unite.ir","text":"","code":"## unite ir_sample_data %>%   tidyr::separate(     \"id_sample\",  c(\"a\", \"b\", \"c\")   ) %>%   tidyr::unite(id_sample, a, b, c) #> # A tibble: 58 × 7 #>    id_measurement col     sample_type sample_comment klason_lignin holocellulose #>  *          <int> <chr>   <chr>       <chr>                    [1]           [1] #>  1              1 GN_11_… needles     Abies Firma M…         0.360         0.308 #>  2              2 GN_11_… needles     Cupressocypar…         0.339         0.250 #>  3              3 GN_11_… needles     Juniperus chi…         0.268         0.336 #>  4              4 GN_11_… needles     Metasequoia g…         0.350         0.184 #>  5              5 GN_11_… needles     Pinus strobus…         0.331         0.309 #>  6              6 GN_11_… needles     Pseudolarix a…         0.279         0.335 #>  7              7 GN_11_… needles     Sequoia sempe…         0.330         0.241 #>  8              8 GN_11_… needles     Taxodium dist…         0.357         0.125 #>  9              9 GN_11_… needles     Thuja occiden…         0.369         0.252 #> 10             10 GN_11_… needles     Tsuga carolin…         0.289         0.349 #> # … with 48 more rows, and 1 more variable: spectra <named list>"},{"path":"https://henningte.github.io/ir/news/index.html","id":"ir-020","dir":"Changelog","previous_headings":"","what":"ir 0.2.0","title":"ir 0.2.0","text":"CRAN release: 2022-04-25 First CRAN release (#1). Added NEWS.md file track changes package. Added tidyverse methods ir objects. ir objects longer require columns measurement_id sample_id, column spectra. Added subsetting binding methods ir objects. Added arithmetic operators ir objects.","code":""}]
